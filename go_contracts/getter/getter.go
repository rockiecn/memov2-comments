// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package getter

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// FsOut is an auto generated low-level Go binding around an user-defined struct.
type FsOut struct {
	Nonce    uint64
	SubNonce uint64
}

// GroupOut is an auto generated low-level Go binding around an user-defined struct.
type GroupOut struct {
	Size   uint64
	Sprice *big.Int
	Lost   *big.Int
}

// RoleOut is an auto generated low-level Go binding around an user-defined struct.
type RoleOut struct {
	IsBan    bool
	IsActive bool
	RType    uint8
	Index    uint64
	GIndex   uint64
	Owner    common.Address
	Next     common.Address
	Extra    []byte
}

// SettleOut is an auto generated low-level Go binding around an user-defined struct.
type SettleOut struct {
	Time    uint64
	Size    uint64
	Price   *big.Int
	MaxPay  *big.Int
	HasPaid *big.Int
	CanPay  *big.Int
	Lost    *big.Int
}

// StoreOut is an auto generated low-level Go binding around an user-defined struct.
type StoreOut struct {
	Start  uint64
	End    uint64
	Size   uint64
	Sprice *big.Int
}

// GetterABI is the input ABI used to generate the binding from.
const GetterABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_inst\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"}],\"name\":\"AddOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"},{\"internalType\":\"bytes[5]\",\"name\":\"signs\",\"type\":\"bytes[5]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"fsBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACnt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getAcc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ui\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pi\",\"type\":\"uint64\"}],\"name\":\"getFsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"subNonce\",\"type\":\"uint64\"}],\"internalType\":\"structFsOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGCnt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getGInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getGSInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"internalType\":\"structGroupOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"getK\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"getKCnt\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getKManage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getPInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"getPf\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getRInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isBan\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"rType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gIndex\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extra\",\"type\":\"bytes\"}],\"internalType\":\"structRoleOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getSStra\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"pi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getSettleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hasPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"canPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"internalType\":\"structSettleOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ui\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getStoreInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"internalType\":\"structStoreOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tIndex\",\"type\":\"uint8\"}],\"name\":\"getTA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTCnt\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"name\":\"getTI\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inst\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"instances\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ki\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"kmBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"manageRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"pleBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// GetterFuncSigs maps the 4-byte function signature to its string representation.
var GetterFuncSigs = map[string]string{
	"4bf1b134": "add(address,bool,bytes[5])",
	"de9375f2": "auth()",
	"6248af34": "fsBalanceOf(uint64,uint8)",
	"7264a551": "getACnt()",
	"caca4a06": "getAcc(address)",
	"9332aa6e": "getAddr(uint64)",
	"59f7b572": "getFsInfo(uint64,uint64)",
	"059e783d": "getGCnt()",
	"38add6a1": "getGInfo(uint64)",
	"24c7be2f": "getGSInfo(uint64,uint8)",
	"da41f894": "getK(uint64,uint64)",
	"4cfd1e2d": "getKCnt(uint64)",
	"929629d2": "getKManage(uint64)",
	"770609a8": "getLevel(uint64)",
	"50aa2329": "getPInfo(uint64)",
	"681e4819": "getPf(uint8,uint64)",
	"eb395fde": "getPledge(uint8)",
	"441abace": "getRInfo(address)",
	"dc698953": "getSStra(uint64)",
	"64c64a4d": "getSettleInfo(uint64,uint8)",
	"8f328ecd": "getStoreInfo(uint64,uint64,uint8)",
	"8bb4a637": "getTA(uint8)",
	"7600b86a": "getTCnt()",
	"2df2685f": "getTI(address)",
	"66c2b0cd": "getTotalPledge()",
	"bd6b2222": "inst()",
	"3ec7d5b9": "instances(uint8)",
	"c988e9df": "kmBalanceOf(uint64,uint8,uint64)",
	"3f89be6e": "manageRate(uint64)",
	"022914a7": "owners(address)",
	"3623255d": "pleBalanceOf(uint64,uint8)",
	"54fd4d50": "version()",
}

// GetterBin is the compiled bytecode used for deploying new contracts.
var GetterBin = "0x60806040526001805461ffff60a01b1916600160a11b1790553480156200002557600080fd5b5060405162002c0638038062002c06833981016040819052620000489162000097565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055620000cf565b80516001600160a01b03811681146200009257600080fd5b919050565b60008060408385031215620000ab57600080fd5b620000b6836200007a565b9150620000c6602084016200007a565b90509250929050565b612b2780620000df6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806366c2b0cd1161010f5780639332aa6e116100a2578063da41f89411610071578063da41f894146105d7578063dc698953146105ea578063de9375f214610617578063eb395fde1461062a57600080fd5b80639332aa6e1461058b578063bd6b22221461059e578063c988e9df146105b1578063caca4a06146105c457600080fd5b8063770609a8116100de578063770609a8146104ff5780638bb4a637146105125780638f328ecd14610525578063929629d21461057857600080fd5b806366c2b0cd146104b5578063681e4819146104bd5780637264a551146104ef5780637600b86a146104f757600080fd5b8063441abace1161018757806354fd4d501161015657806354fd4d50146103ca57806359f7b572146103f25780636248af341461042c57806364c64a4d1461043f57600080fd5b8063441abace1461035a5780634bf1b1341461037a5780634cfd1e2d1461038f57806350aa2329146103a257600080fd5b80633623255d116101c35780633623255d146102bf57806338add6a1146102e05780633ec7d5b91461030a5780633f89be6e1461033557600080fd5b8063022914a7146101f5578063059e783d1461022d57806324c7be2f1461024d5780632df2685f1461028b575b600080fd5b6102186102033660046121c0565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61023561063d565b6040516001600160401b039091168152602001610224565b61026061025b366004612201565b610714565b6040805182516001600160401b03168152602080840151908201529181015190820152606001610224565b61029e6102993660046121c0565b610834565b6040805160ff90941684529115156020840152151590820152606001610224565b6102d26102cd366004612201565b610922565b604051908152602001610224565b6102f36102ee36600461223a565b610a1a565b604080519215158352901515602083015201610224565b61031d610318366004612257565b610b0a565b6040516001600160a01b039091168152602001610224565b61034861034336600461223a565b610b84565b60405160ff9091168152602001610224565b61036d6103683660046121c0565b610ccd565b60405161022491906122d0565b61038d610388366004612434565b610deb565b005b61034861039d36600461223a565b610f68565b6103b56103b036600461223a565b61108d565b60408051928352602083019190915201610224565b6001546103df90600160a01b900461ffff1681565b60405161ffff9091168152602001610224565b610405610400366004612536565b611173565b6040805182516001600160401b039081168252602093840151169281019290925201610224565b6103b561043a366004612201565b61126e565b61045261044d366004612201565b611369565b6040516102249190600060e0820190506001600160401b038084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6102d26114a6565b6104d06104cb366004612564565b611577565b604080516001600160401b039093168352602083019190915201610224565b6102356116da565b610348611787565b61034861050d36600461223a565b611858565b61031d610520366004612257565b61193b565b610538610533366004612582565b6119dc565b6040805182516001600160401b03908116825260208085015182169083015283830151169181019190915260609182015191810191909152608001610224565b61031d61058636600461223a565b611aef565b61031d61059936600461223a565b611b96565b60025461031d906001600160a01b031681565b6103b56105bf3660046125cd565b611c3d565b6102356105d23660046121c0565b611db0565b6102356105e5366004612536565b611e8c565b6105fd6105f836600461223a565b611fe5565b6040805160ff938416815292909116602083015201610224565b60015461031d906001600160a01b031681565b6102d2610638366004612257565b6120cb565b600254604051633ec7d5b960e01b8152600b60048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad919061261d565b6001600160a01b031663059e783d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190612645565b91505090565b610741604051806060016040528060006001600160401b0316815260200160008152602001600081525090565b600254604051633ec7d5b960e01b8152600a60048201526001600160a01b03909116908190633ec7d5b990602401602060405180830381865afa15801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b0919061261d565b604051635475cf8d60e01b81526001600160401b038616600482015260ff851660248201526001600160a01b039190911690635475cf8d90604401606060405180830381865afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190612662565b949350505050565b600254604051633ec7d5b960e01b815260076004820152600091829182916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a8919061261d565b604051632df2685f60e01b81526001600160a01b0387811660048301529190911690632df2685f90602401606060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091491906126d9565b935093509350509193909250565b600254604051633ec7d5b960e01b8152600860048201526000916001600160a01b03169082908290633ec7d5b990602401602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610994919061261d565b60405163fc3ba0ad60e01b81526001600160401b038716600482015260ff861660248201529091506001600160a01b0382169063fc3ba0ad90604401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a11919061271b565b95945050505050565b600254604051633ec7d5b960e01b8152600b600482015260009182916001600160a01b03909116908190633ec7d5b990602401602060405180830381865afa158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e919061261d565b6040516338add6a160e01b81526001600160401b03861660048201526001600160a01b0391909116906338add6a1906024016040805180830381865afa158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190612734565b9250925050915091565b600254604051633ec7d5b960e01b815260ff831660048201526000916001600160a01b0316908190633ec7d5b9906024015b602060405180830381865afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d919061261d565b9392505050565b600254604051633ec7d5b960e01b8152600b60048201526000916001600160a01b03169082908290633ec7d5b990602401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf6919061261d565b60405163494b14e960e11b81526001600160401b03861660048201526001600160a01b03919091169063929629d290602401602060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c69919061261d565b9050806001600160a01b0316636d23f6c86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190612763565b604080516101008101825260008082526020820181905281830181905260608083018290526080830182905260a0830182905260c083019190915260e08201526002549151633ec7d5b960e01b81526006600482015290916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b919061261d565b60405163220d5d6760e11b81526001600160a01b038581166004830152919091169063441abace90602401600060405180830381865afa158015610dc3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7d91908101906127c5565b823b6000819003610e375760405162461bcd60e51b81526020600482015260126024820152713732b2b21031b7b73a3930b1ba1030b2323960711b604482015260640160405180910390fd5b6040516bffffffffffffffffffffffff1930606090811b821660208401526218591960ea1b603484015286901b16603782015283151560f81b604b820152600090604c0160408051601f1981840301815290829052805160209091012060015463a96bba9d60e01b83529092506001600160a01b03169063a96bba9d90610ec490849087906004016128a9565b600060405180830381600087803b158015610ede57600080fd5b505af1158015610ef2573d6000803e3d6000fd5b5050604080516001600160a01b038916815287151560208201527f938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807935001905060405180910390a15050506001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b600254604051633ec7d5b960e01b8152600b60048201526000916001600160a01b03169082908290633ec7d5b990602401602060405180830381865afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda919061261d565b60405163494b14e960e11b81526001600160401b03861660048201526001600160a01b03919091169063929629d290602401602060405180830381865afa158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d919061261d565b9050806001600160a01b03166339f2db966040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca9573d6000803e3d6000fd5b600254604051633ec7d5b960e01b8152600b600482015260009182916001600160a01b03909116908190633ec7d5b990602401602060405180830381865afa1580156110dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611101919061261d565b6040516350aa232960e01b81526001600160401b03861660048201526001600160a01b0391909116906350aa2329906024016040805180830381865afa15801561114f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190612900565b604080518082018252600080825260208201526002549151633ec7d5b960e01b8152600a600482015290916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa1580156111d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f4919061261d565b604051632cfbdab960e11b81526001600160401b038087166004830152851660248201526001600160a01b0391909116906359f7b572906044016040805180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190612924565b600254604051633ec7d5b960e01b8152600a600482015260009182916001600160a01b03909116908190633ec7d5b990602401602060405180830381865afa1580156112be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e2919061261d565b60405163fc3ba0ad60e01b81526001600160401b038716600482015260ff861660248201526001600160a01b03919091169063fc3ba0ad906044016040805180830381865afa158015611339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135d9190612900565b92509250509250929050565b6113bb6040518060e0016040528060006001600160401b0316815260200160006001600160401b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b600254604051633ec7d5b960e01b8152600a60048201526001600160a01b03909116908190633ec7d5b990602401602060405180830381865afa158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a919061261d565b6040516364c64a4d60e01b81526001600160401b038616600482015260ff851660248201526001600160a01b0391909116906364c64a4d9060440160e060405180830381865afa158015611482573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190612982565b600254604051633ec7d5b960e01b8152600860048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa1580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611516919061261d565b6001600160a01b031663c21a43e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611553573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e919061271b565b600254604051633ec7d5b960e01b8152600b600482015260009182916001600160a01b039091169082908290633ec7d5b990602401602060405180830381865afa1580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed919061261d565b60405163494b14e960e11b81526001600160401b03871660048201526001600160a01b03919091169063929629d290602401602060405180830381865afa15801561163c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611660919061261d565b604051634f3c2eab60e01b815260ff881660048201529091506001600160a01b03821690634f3c2eab906024016040805180830381865afa1580156116a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cd9190612a17565b9350935050509250929050565b600254604051633ec7d5b960e01b8152600660048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015611726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174a919061261d565b6001600160a01b0316637264a5516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ea573d6000803e3d6000fd5b600254604051633ec7d5b960e01b8152600760048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa1580156117d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f7919061261d565b6001600160a01b0316637600b86a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611834573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190612763565b600254604051633ec7d5b960e01b8152600b60048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa1580156118a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c8919061261d565b604051630ee0c13560e31b81526001600160401b03851660048201526001600160a01b03919091169063770609a890602401602060405180830381865afa158015611917573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190612763565b600254604051633ec7d5b960e01b8152600760048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015611987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ab919061261d565b604051638bb4a63760e01b815260ff851660048201526001600160a01b039190911690638bb4a63790602401610b3c565b6040805160808101825260008082526020820181905281830181905260608201526002549151633ec7d5b960e01b8152600a600482015290916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6b919061261d565b604051638f328ecd60e01b81526001600160401b0380881660048301528616602482015260ff851660448201526001600160a01b039190911690638f328ecd90606401608060405180830381865afa158015611acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190612a45565b600254604051633ec7d5b960e01b8152600b60048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015611b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5f919061261d565b60405163494b14e960e11b81526001600160401b03851660048201526001600160a01b03919091169063929629d290602401610b3c565b600254604051633ec7d5b960e01b8152600660048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015611be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c06919061261d565b604051634999553760e11b81526001600160401b03851660048201526001600160a01b039190911690639332aa6e90602401610b3c565b600254604051633ec7d5b960e01b8152600b600482015260009182916001600160a01b039091169082908290633ec7d5b990602401602060405180830381865afa158015611c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb3919061261d565b60405163494b14e960e11b81526001600160401b03871660048201526001600160a01b03919091169063929629d290602401602060405180830381865afa158015611d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d26919061261d565b60405163fc3ba0ad60e01b81526001600160401b038916600482015260ff881660248201529091506001600160a01b0382169063fc3ba0ad906044016040805180830381865afa158015611d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da29190612900565b935093505050935093915050565b600254604051633ec7d5b960e01b8152600660048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015611dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e20919061261d565b604051636565250360e11b81526001600160a01b038581166004830152919091169063caca4a0690602401602060405180830381865afa158015611e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190612645565b600254604051633ec7d5b960e01b8152600b60048201526000916001600160a01b03169082908290633ec7d5b990602401602060405180830381865afa158015611eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efe919061261d565b60405163494b14e960e11b81526001600160401b03861660048201526001600160a01b03919091169063929629d290602401602060405180830381865afa158015611f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f71919061261d565b60405163dc0e7f4560e01b81526001600160401b03871660048201529091506001600160a01b0382169063dc0e7f4590602401602060405180830381865afa158015611fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190612645565b600254604051633ec7d5b960e01b8152600b600482015260009182916001600160a01b03909116908190633ec7d5b990602401602060405180830381865afa158015612035573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612059919061261d565b60405163dc69895360e01b81526001600160401b03861660048201526001600160a01b03919091169063dc698953906024016040805180830381865afa1580156120a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190612ac2565b600254604051633ec7d5b960e01b8152600860048201526000916001600160a01b0316908190633ec7d5b990602401602060405180830381865afa158015612117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213b919061261d565b60405163759cafef60e11b815260ff851660048201526001600160a01b03919091169063eb395fde90602401602060405180830381865afa158015612184573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d919061271b565b6001600160a01b03811681146121bd57600080fd5b50565b6000602082840312156121d257600080fd5b8135610b7d816121a8565b6001600160401b03811681146121bd57600080fd5b60ff811681146121bd57600080fd5b6000806040838503121561221457600080fd5b823561221f816121dd565b9150602083013561222f816121f2565b809150509250929050565b60006020828403121561224c57600080fd5b8135610b7d816121dd565b60006020828403121561226957600080fd5b8135610b7d816121f2565b60005b8381101561228f578181015183820152602001612277565b8381111561229e576000848401525b50505050565b600081518084526122bc816020860160208601612274565b601f01601f19169290920160200192915050565b60208152815115156020820152602082015115156040820152600060408301516122ff606084018260ff169052565b5060608301516001600160401b03811660808401525060808301516001600160401b03811660a08401525060a08301516001600160a01b03811660c08401525060c08301516001600160a01b03811660e08401525060e08301516101008381015261082c6101208401826122a4565b80151581146121bd57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156123b4576123b461237c565b60405290565b60405161010081016001600160401b03811182821017156123b4576123b461237c565b604051601f8201601f191681016001600160401b03811182821017156124055761240561237c565b604052919050565b60006001600160401b038211156124265761242661237c565b50601f01601f191660200190565b60008060006060848603121561244957600080fd5b8335612454816121a8565b92506020848101356124658161236e565b925060408501356001600160401b038082111561248157600080fd5b8187019150601f888184011261249657600080fd5b61249e612392565b8060a085018b8111156124b057600080fd5b855b81811015612524578035868111156124ca5760008081fd5b87018581018e136124db5760008081fd5b80356124ee6124e98261240d565b6123dd565b8181528f8b8385010111156125035760008081fd5b818b84018c83013760009181018b01919091528552509287019287016124b2565b50508096505050505050509250925092565b6000806040838503121561254957600080fd5b8235612554816121dd565b9150602083013561222f816121dd565b6000806040838503121561257757600080fd5b8235612554816121f2565b60008060006060848603121561259757600080fd5b83356125a2816121dd565b925060208401356125b2816121dd565b915060408401356125c2816121f2565b809150509250925092565b6000806000606084860312156125e257600080fd5b83356125ed816121dd565b925060208401356125fd816121f2565b915060408401356125c2816121dd565b8051612618816121a8565b919050565b60006020828403121561262f57600080fd5b8151610b7d816121a8565b8051612618816121dd565b60006020828403121561265757600080fd5b8151610b7d816121dd565b60006060828403121561267457600080fd5b604051606081018181106001600160401b03821117156126965761269661237c565b60405282516126a4816121dd565b8152602083810151908201526040928301519281019290925250919050565b8051612618816121f2565b80516126188161236e565b6000806000606084860312156126ee57600080fd5b83516126f9816121f2565b602085015190935061270a8161236e565b60408501519092506125c28161236e565b60006020828403121561272d57600080fd5b5051919050565b6000806040838503121561274757600080fd5b82516127528161236e565b602084015190925061222f8161236e565b60006020828403121561277557600080fd5b8151610b7d816121f2565b600082601f83011261279157600080fd5b815161279f6124e98261240d565b8181528460208386010111156127b457600080fd5b61082c826020830160208701612274565b6000602082840312156127d757600080fd5b81516001600160401b03808211156127ee57600080fd5b90830190610100828603121561280357600080fd5b61280b6123ba565b612814836126ce565b8152612822602084016126ce565b6020820152612833604084016126c3565b60408201526128446060840161263a565b60608201526128556080840161263a565b608082015261286660a0840161260d565b60a082015261287760c0840161260d565b60c082015260e08301518281111561288e57600080fd5b61289a87828601612780565b60e08301525095945050505050565b8281526040602080830182905260009160e084019190840185845b60058110156128f357603f198786030183526128e18583516122a4565b945091830191908301906001016128c4565b5092979650505050505050565b6000806040838503121561291357600080fd5b505080516020909101519092909150565b60006040828403121561293657600080fd5b604051604081018181106001600160401b03821117156129585761295861237c565b6040528251612966816121dd565b81526020830151612976816121dd565b60208201529392505050565b600060e0828403121561299457600080fd5b60405160e081018181106001600160401b03821117156129b6576129b661237c565b60405282516129c4816121dd565b815260208301516129d4816121dd565b8060208301525060408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60008060408385031215612a2a57600080fd5b8251612a35816121dd565b6020939093015192949293505050565b600060808284031215612a5757600080fd5b604051608081018181106001600160401b0382111715612a7957612a7961237c565b6040528251612a87816121dd565b81526020830151612a97816121dd565b60208201526040830151612aaa816121dd565b60408201526060928301519281019290925250919050565b60008060408385031215612ad557600080fd5b8251612ae0816121f2565b602084015190925061222f816121f256fea26469706673582212200400c2aca536c6a93fa6c6f8409b1709ab328c25a8297d1fcc4bb0c127e64dfe64736f6c634300080e0033"

// DeployGetter deploys a new Ethereum contract, binding an instance of Getter to it.
func DeployGetter(auth *bind.TransactOpts, backend bind.ContractBackend, _a common.Address, _inst common.Address) (common.Address, *types.Transaction, *Getter, error) {
	parsed, err := abi.JSON(strings.NewReader(GetterABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(GetterBin), backend, _a, _inst)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Getter{GetterCaller: GetterCaller{contract: contract}, GetterTransactor: GetterTransactor{contract: contract}, GetterFilterer: GetterFilterer{contract: contract}}, nil
}

// Getter is an auto generated Go binding around an Ethereum contract.
type Getter struct {
	GetterCaller     // Read-only binding to the contract
	GetterTransactor // Write-only binding to the contract
	GetterFilterer   // Log filterer for contract events
}

// GetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type GetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type GetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type GetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type GetterSession struct {
	Contract     *Getter           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type GetterCallerSession struct {
	Contract *GetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// GetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type GetterTransactorSession struct {
	Contract     *GetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type GetterRaw struct {
	Contract *Getter // Generic contract binding to access the raw methods on
}

// GetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type GetterCallerRaw struct {
	Contract *GetterCaller // Generic read-only contract binding to access the raw methods on
}

// GetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type GetterTransactorRaw struct {
	Contract *GetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewGetter creates a new instance of Getter, bound to a specific deployed contract.
func NewGetter(address common.Address, backend bind.ContractBackend) (*Getter, error) {
	contract, err := bindGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Getter{GetterCaller: GetterCaller{contract: contract}, GetterTransactor: GetterTransactor{contract: contract}, GetterFilterer: GetterFilterer{contract: contract}}, nil
}

// NewGetterCaller creates a new read-only instance of Getter, bound to a specific deployed contract.
func NewGetterCaller(address common.Address, caller bind.ContractCaller) (*GetterCaller, error) {
	contract, err := bindGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &GetterCaller{contract: contract}, nil
}

// NewGetterTransactor creates a new write-only instance of Getter, bound to a specific deployed contract.
func NewGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*GetterTransactor, error) {
	contract, err := bindGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &GetterTransactor{contract: contract}, nil
}

// NewGetterFilterer creates a new log filterer instance of Getter, bound to a specific deployed contract.
func NewGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*GetterFilterer, error) {
	contract, err := bindGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &GetterFilterer{contract: contract}, nil
}

// bindGetter binds a generic wrapper to an already deployed contract.
func bindGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(GetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Getter *GetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Getter.Contract.GetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Getter *GetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Getter.Contract.GetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Getter *GetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Getter.Contract.GetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Getter *GetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Getter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Getter *GetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Getter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Getter *GetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Getter.Contract.contract.Transact(opts, method, params...)
}

// Auth is a free data retrieval call binding the contract method 0xde9375f2.
//
// Solidity: function auth() view returns(address)
func (_Getter *GetterCaller) Auth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "auth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Auth is a free data retrieval call binding the contract method 0xde9375f2.
//
// Solidity: function auth() view returns(address)
func (_Getter *GetterSession) Auth() (common.Address, error) {
	return _Getter.Contract.Auth(&_Getter.CallOpts)
}

// Auth is a free data retrieval call binding the contract method 0xde9375f2.
//
// Solidity: function auth() view returns(address)
func (_Getter *GetterCallerSession) Auth() (common.Address, error) {
	return _Getter.Contract.Auth(&_Getter.CallOpts)
}

// FsBalanceOf is a free data retrieval call binding the contract method 0x6248af34.
//
// Solidity: function fsBalanceOf(uint64 i, uint8 ti) view returns(uint256, uint256)
func (_Getter *GetterCaller) FsBalanceOf(opts *bind.CallOpts, i uint64, ti uint8) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "fsBalanceOf", i, ti)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// FsBalanceOf is a free data retrieval call binding the contract method 0x6248af34.
//
// Solidity: function fsBalanceOf(uint64 i, uint8 ti) view returns(uint256, uint256)
func (_Getter *GetterSession) FsBalanceOf(i uint64, ti uint8) (*big.Int, *big.Int, error) {
	return _Getter.Contract.FsBalanceOf(&_Getter.CallOpts, i, ti)
}

// FsBalanceOf is a free data retrieval call binding the contract method 0x6248af34.
//
// Solidity: function fsBalanceOf(uint64 i, uint8 ti) view returns(uint256, uint256)
func (_Getter *GetterCallerSession) FsBalanceOf(i uint64, ti uint8) (*big.Int, *big.Int, error) {
	return _Getter.Contract.FsBalanceOf(&_Getter.CallOpts, i, ti)
}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_Getter *GetterCaller) GetACnt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getACnt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_Getter *GetterSession) GetACnt() (uint64, error) {
	return _Getter.Contract.GetACnt(&_Getter.CallOpts)
}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_Getter *GetterCallerSession) GetACnt() (uint64, error) {
	return _Getter.Contract.GetACnt(&_Getter.CallOpts)
}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address a) view returns(uint64)
func (_Getter *GetterCaller) GetAcc(opts *bind.CallOpts, a common.Address) (uint64, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getAcc", a)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address a) view returns(uint64)
func (_Getter *GetterSession) GetAcc(a common.Address) (uint64, error) {
	return _Getter.Contract.GetAcc(&_Getter.CallOpts, a)
}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address a) view returns(uint64)
func (_Getter *GetterCallerSession) GetAcc(a common.Address) (uint64, error) {
	return _Getter.Contract.GetAcc(&_Getter.CallOpts, a)
}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 i) view returns(address)
func (_Getter *GetterCaller) GetAddr(opts *bind.CallOpts, i uint64) (common.Address, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getAddr", i)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 i) view returns(address)
func (_Getter *GetterSession) GetAddr(i uint64) (common.Address, error) {
	return _Getter.Contract.GetAddr(&_Getter.CallOpts, i)
}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 i) view returns(address)
func (_Getter *GetterCallerSession) GetAddr(i uint64) (common.Address, error) {
	return _Getter.Contract.GetAddr(&_Getter.CallOpts, i)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 ui, uint64 pi) view returns((uint64,uint64))
func (_Getter *GetterCaller) GetFsInfo(opts *bind.CallOpts, ui uint64, pi uint64) (FsOut, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getFsInfo", ui, pi)

	if err != nil {
		return *new(FsOut), err
	}

	out0 := *abi.ConvertType(out[0], new(FsOut)).(*FsOut)

	return out0, err

}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 ui, uint64 pi) view returns((uint64,uint64))
func (_Getter *GetterSession) GetFsInfo(ui uint64, pi uint64) (FsOut, error) {
	return _Getter.Contract.GetFsInfo(&_Getter.CallOpts, ui, pi)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 ui, uint64 pi) view returns((uint64,uint64))
func (_Getter *GetterCallerSession) GetFsInfo(ui uint64, pi uint64) (FsOut, error) {
	return _Getter.Contract.GetFsInfo(&_Getter.CallOpts, ui, pi)
}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_Getter *GetterCaller) GetGCnt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getGCnt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_Getter *GetterSession) GetGCnt() (uint64, error) {
	return _Getter.Contract.GetGCnt(&_Getter.CallOpts)
}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_Getter *GetterCallerSession) GetGCnt() (uint64, error) {
	return _Getter.Contract.GetGCnt(&_Getter.CallOpts)
}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_Getter *GetterCaller) GetGInfo(opts *bind.CallOpts, i uint64) (bool, bool, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getGInfo", i)

	if err != nil {
		return *new(bool), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_Getter *GetterSession) GetGInfo(i uint64) (bool, bool, error) {
	return _Getter.Contract.GetGInfo(&_Getter.CallOpts, i)
}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_Getter *GetterCallerSession) GetGInfo(i uint64) (bool, bool, error) {
	return _Getter.Contract.GetGInfo(&_Getter.CallOpts, i)
}

// GetGSInfo is a free data retrieval call binding the contract method 0x24c7be2f.
//
// Solidity: function getGSInfo(uint64 gi, uint8 ti) view returns((uint64,uint256,uint256))
func (_Getter *GetterCaller) GetGSInfo(opts *bind.CallOpts, gi uint64, ti uint8) (GroupOut, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getGSInfo", gi, ti)

	if err != nil {
		return *new(GroupOut), err
	}

	out0 := *abi.ConvertType(out[0], new(GroupOut)).(*GroupOut)

	return out0, err

}

// GetGSInfo is a free data retrieval call binding the contract method 0x24c7be2f.
//
// Solidity: function getGSInfo(uint64 gi, uint8 ti) view returns((uint64,uint256,uint256))
func (_Getter *GetterSession) GetGSInfo(gi uint64, ti uint8) (GroupOut, error) {
	return _Getter.Contract.GetGSInfo(&_Getter.CallOpts, gi, ti)
}

// GetGSInfo is a free data retrieval call binding the contract method 0x24c7be2f.
//
// Solidity: function getGSInfo(uint64 gi, uint8 ti) view returns((uint64,uint256,uint256))
func (_Getter *GetterCallerSession) GetGSInfo(gi uint64, ti uint8) (GroupOut, error) {
	return _Getter.Contract.GetGSInfo(&_Getter.CallOpts, gi, ti)
}

// GetK is a free data retrieval call binding the contract method 0xda41f894.
//
// Solidity: function getK(uint64 i, uint64 gi) view returns(uint64)
func (_Getter *GetterCaller) GetK(opts *bind.CallOpts, i uint64, gi uint64) (uint64, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getK", i, gi)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetK is a free data retrieval call binding the contract method 0xda41f894.
//
// Solidity: function getK(uint64 i, uint64 gi) view returns(uint64)
func (_Getter *GetterSession) GetK(i uint64, gi uint64) (uint64, error) {
	return _Getter.Contract.GetK(&_Getter.CallOpts, i, gi)
}

// GetK is a free data retrieval call binding the contract method 0xda41f894.
//
// Solidity: function getK(uint64 i, uint64 gi) view returns(uint64)
func (_Getter *GetterCallerSession) GetK(i uint64, gi uint64) (uint64, error) {
	return _Getter.Contract.GetK(&_Getter.CallOpts, i, gi)
}

// GetKCnt is a free data retrieval call binding the contract method 0x4cfd1e2d.
//
// Solidity: function getKCnt(uint64 gi) view returns(uint8)
func (_Getter *GetterCaller) GetKCnt(opts *bind.CallOpts, gi uint64) (uint8, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getKCnt", gi)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetKCnt is a free data retrieval call binding the contract method 0x4cfd1e2d.
//
// Solidity: function getKCnt(uint64 gi) view returns(uint8)
func (_Getter *GetterSession) GetKCnt(gi uint64) (uint8, error) {
	return _Getter.Contract.GetKCnt(&_Getter.CallOpts, gi)
}

// GetKCnt is a free data retrieval call binding the contract method 0x4cfd1e2d.
//
// Solidity: function getKCnt(uint64 gi) view returns(uint8)
func (_Getter *GetterCallerSession) GetKCnt(gi uint64) (uint8, error) {
	return _Getter.Contract.GetKCnt(&_Getter.CallOpts, gi)
}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 i) view returns(address)
func (_Getter *GetterCaller) GetKManage(opts *bind.CallOpts, i uint64) (common.Address, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getKManage", i)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 i) view returns(address)
func (_Getter *GetterSession) GetKManage(i uint64) (common.Address, error) {
	return _Getter.Contract.GetKManage(&_Getter.CallOpts, i)
}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 i) view returns(address)
func (_Getter *GetterCallerSession) GetKManage(i uint64) (common.Address, error) {
	return _Getter.Contract.GetKManage(&_Getter.CallOpts, i)
}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_Getter *GetterCaller) GetLevel(opts *bind.CallOpts, i uint64) (uint8, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getLevel", i)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_Getter *GetterSession) GetLevel(i uint64) (uint8, error) {
	return _Getter.Contract.GetLevel(&_Getter.CallOpts, i)
}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_Getter *GetterCallerSession) GetLevel(i uint64) (uint8, error) {
	return _Getter.Contract.GetLevel(&_Getter.CallOpts, i)
}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 i) view returns(uint256, uint256)
func (_Getter *GetterCaller) GetPInfo(opts *bind.CallOpts, i uint64) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getPInfo", i)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 i) view returns(uint256, uint256)
func (_Getter *GetterSession) GetPInfo(i uint64) (*big.Int, *big.Int, error) {
	return _Getter.Contract.GetPInfo(&_Getter.CallOpts, i)
}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 i) view returns(uint256, uint256)
func (_Getter *GetterCallerSession) GetPInfo(i uint64) (*big.Int, *big.Int, error) {
	return _Getter.Contract.GetPInfo(&_Getter.CallOpts, i)
}

// GetPf is a free data retrieval call binding the contract method 0x681e4819.
//
// Solidity: function getPf(uint8 ti, uint64 gi) view returns(uint64, uint256)
func (_Getter *GetterCaller) GetPf(opts *bind.CallOpts, ti uint8, gi uint64) (uint64, *big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getPf", ti, gi)

	if err != nil {
		return *new(uint64), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetPf is a free data retrieval call binding the contract method 0x681e4819.
//
// Solidity: function getPf(uint8 ti, uint64 gi) view returns(uint64, uint256)
func (_Getter *GetterSession) GetPf(ti uint8, gi uint64) (uint64, *big.Int, error) {
	return _Getter.Contract.GetPf(&_Getter.CallOpts, ti, gi)
}

// GetPf is a free data retrieval call binding the contract method 0x681e4819.
//
// Solidity: function getPf(uint8 ti, uint64 gi) view returns(uint64, uint256)
func (_Getter *GetterCallerSession) GetPf(ti uint8, gi uint64) (uint64, *big.Int, error) {
	return _Getter.Contract.GetPf(&_Getter.CallOpts, ti, gi)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 ti) view returns(uint256)
func (_Getter *GetterCaller) GetPledge(opts *bind.CallOpts, ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getPledge", ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 ti) view returns(uint256)
func (_Getter *GetterSession) GetPledge(ti uint8) (*big.Int, error) {
	return _Getter.Contract.GetPledge(&_Getter.CallOpts, ti)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 ti) view returns(uint256)
func (_Getter *GetterCallerSession) GetPledge(ti uint8) (*big.Int, error) {
	return _Getter.Contract.GetPledge(&_Getter.CallOpts, ti)
}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_Getter *GetterCaller) GetRInfo(opts *bind.CallOpts, a common.Address) (RoleOut, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getRInfo", a)

	if err != nil {
		return *new(RoleOut), err
	}

	out0 := *abi.ConvertType(out[0], new(RoleOut)).(*RoleOut)

	return out0, err

}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_Getter *GetterSession) GetRInfo(a common.Address) (RoleOut, error) {
	return _Getter.Contract.GetRInfo(&_Getter.CallOpts, a)
}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_Getter *GetterCallerSession) GetRInfo(a common.Address) (RoleOut, error) {
	return _Getter.Contract.GetRInfo(&_Getter.CallOpts, a)
}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_Getter *GetterCaller) GetSStra(opts *bind.CallOpts, i uint64) (uint8, uint8, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getSStra", i)

	if err != nil {
		return *new(uint8), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new(uint8)).(*uint8)

	return out0, out1, err

}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_Getter *GetterSession) GetSStra(i uint64) (uint8, uint8, error) {
	return _Getter.Contract.GetSStra(&_Getter.CallOpts, i)
}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_Getter *GetterCallerSession) GetSStra(i uint64) (uint8, uint8, error) {
	return _Getter.Contract.GetSStra(&_Getter.CallOpts, i)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 pi, uint8 ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_Getter *GetterCaller) GetSettleInfo(opts *bind.CallOpts, pi uint64, ti uint8) (SettleOut, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getSettleInfo", pi, ti)

	if err != nil {
		return *new(SettleOut), err
	}

	out0 := *abi.ConvertType(out[0], new(SettleOut)).(*SettleOut)

	return out0, err

}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 pi, uint8 ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_Getter *GetterSession) GetSettleInfo(pi uint64, ti uint8) (SettleOut, error) {
	return _Getter.Contract.GetSettleInfo(&_Getter.CallOpts, pi, ti)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 pi, uint8 ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_Getter *GetterCallerSession) GetSettleInfo(pi uint64, ti uint8) (SettleOut, error) {
	return _Getter.Contract.GetSettleInfo(&_Getter.CallOpts, pi, ti)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 ui, uint64 pi, uint8 ti) view returns((uint64,uint64,uint64,uint256))
func (_Getter *GetterCaller) GetStoreInfo(opts *bind.CallOpts, ui uint64, pi uint64, ti uint8) (StoreOut, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getStoreInfo", ui, pi, ti)

	if err != nil {
		return *new(StoreOut), err
	}

	out0 := *abi.ConvertType(out[0], new(StoreOut)).(*StoreOut)

	return out0, err

}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 ui, uint64 pi, uint8 ti) view returns((uint64,uint64,uint64,uint256))
func (_Getter *GetterSession) GetStoreInfo(ui uint64, pi uint64, ti uint8) (StoreOut, error) {
	return _Getter.Contract.GetStoreInfo(&_Getter.CallOpts, ui, pi, ti)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 ui, uint64 pi, uint8 ti) view returns((uint64,uint64,uint64,uint256))
func (_Getter *GetterCallerSession) GetStoreInfo(ui uint64, pi uint64, ti uint8) (StoreOut, error) {
	return _Getter.Contract.GetStoreInfo(&_Getter.CallOpts, ui, pi, ti)
}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 tIndex) view returns(address)
func (_Getter *GetterCaller) GetTA(opts *bind.CallOpts, tIndex uint8) (common.Address, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getTA", tIndex)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 tIndex) view returns(address)
func (_Getter *GetterSession) GetTA(tIndex uint8) (common.Address, error) {
	return _Getter.Contract.GetTA(&_Getter.CallOpts, tIndex)
}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 tIndex) view returns(address)
func (_Getter *GetterCallerSession) GetTA(tIndex uint8) (common.Address, error) {
	return _Getter.Contract.GetTA(&_Getter.CallOpts, tIndex)
}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_Getter *GetterCaller) GetTCnt(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getTCnt")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_Getter *GetterSession) GetTCnt() (uint8, error) {
	return _Getter.Contract.GetTCnt(&_Getter.CallOpts)
}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_Getter *GetterCallerSession) GetTCnt() (uint8, error) {
	return _Getter.Contract.GetTCnt(&_Getter.CallOpts)
}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address t) view returns(uint8, bool, bool)
func (_Getter *GetterCaller) GetTI(opts *bind.CallOpts, t common.Address) (uint8, bool, bool, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getTI", t)

	if err != nil {
		return *new(uint8), *new(bool), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)

	return out0, out1, out2, err

}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address t) view returns(uint8, bool, bool)
func (_Getter *GetterSession) GetTI(t common.Address) (uint8, bool, bool, error) {
	return _Getter.Contract.GetTI(&_Getter.CallOpts, t)
}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address t) view returns(uint8, bool, bool)
func (_Getter *GetterCallerSession) GetTI(t common.Address) (uint8, bool, bool, error) {
	return _Getter.Contract.GetTI(&_Getter.CallOpts, t)
}

// GetTotalPledge is a free data retrieval call binding the contract method 0x66c2b0cd.
//
// Solidity: function getTotalPledge() view returns(uint256)
func (_Getter *GetterCaller) GetTotalPledge(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "getTotalPledge")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalPledge is a free data retrieval call binding the contract method 0x66c2b0cd.
//
// Solidity: function getTotalPledge() view returns(uint256)
func (_Getter *GetterSession) GetTotalPledge() (*big.Int, error) {
	return _Getter.Contract.GetTotalPledge(&_Getter.CallOpts)
}

// GetTotalPledge is a free data retrieval call binding the contract method 0x66c2b0cd.
//
// Solidity: function getTotalPledge() view returns(uint256)
func (_Getter *GetterCallerSession) GetTotalPledge() (*big.Int, error) {
	return _Getter.Contract.GetTotalPledge(&_Getter.CallOpts)
}

// Inst is a free data retrieval call binding the contract method 0xbd6b2222.
//
// Solidity: function inst() view returns(address)
func (_Getter *GetterCaller) Inst(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "inst")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Inst is a free data retrieval call binding the contract method 0xbd6b2222.
//
// Solidity: function inst() view returns(address)
func (_Getter *GetterSession) Inst() (common.Address, error) {
	return _Getter.Contract.Inst(&_Getter.CallOpts)
}

// Inst is a free data retrieval call binding the contract method 0xbd6b2222.
//
// Solidity: function inst() view returns(address)
func (_Getter *GetterCallerSession) Inst() (common.Address, error) {
	return _Getter.Contract.Inst(&_Getter.CallOpts)
}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_Getter *GetterCaller) Instances(opts *bind.CallOpts, _type uint8) (common.Address, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "instances", _type)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_Getter *GetterSession) Instances(_type uint8) (common.Address, error) {
	return _Getter.Contract.Instances(&_Getter.CallOpts, _type)
}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_Getter *GetterCallerSession) Instances(_type uint8) (common.Address, error) {
	return _Getter.Contract.Instances(&_Getter.CallOpts, _type)
}

// KmBalanceOf is a free data retrieval call binding the contract method 0xc988e9df.
//
// Solidity: function kmBalanceOf(uint64 ki, uint8 ti, uint64 gi) view returns(uint256, uint256)
func (_Getter *GetterCaller) KmBalanceOf(opts *bind.CallOpts, ki uint64, ti uint8, gi uint64) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "kmBalanceOf", ki, ti, gi)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// KmBalanceOf is a free data retrieval call binding the contract method 0xc988e9df.
//
// Solidity: function kmBalanceOf(uint64 ki, uint8 ti, uint64 gi) view returns(uint256, uint256)
func (_Getter *GetterSession) KmBalanceOf(ki uint64, ti uint8, gi uint64) (*big.Int, *big.Int, error) {
	return _Getter.Contract.KmBalanceOf(&_Getter.CallOpts, ki, ti, gi)
}

// KmBalanceOf is a free data retrieval call binding the contract method 0xc988e9df.
//
// Solidity: function kmBalanceOf(uint64 ki, uint8 ti, uint64 gi) view returns(uint256, uint256)
func (_Getter *GetterCallerSession) KmBalanceOf(ki uint64, ti uint8, gi uint64) (*big.Int, *big.Int, error) {
	return _Getter.Contract.KmBalanceOf(&_Getter.CallOpts, ki, ti, gi)
}

// ManageRate is a free data retrieval call binding the contract method 0x3f89be6e.
//
// Solidity: function manageRate(uint64 gi) view returns(uint8)
func (_Getter *GetterCaller) ManageRate(opts *bind.CallOpts, gi uint64) (uint8, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "manageRate", gi)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ManageRate is a free data retrieval call binding the contract method 0x3f89be6e.
//
// Solidity: function manageRate(uint64 gi) view returns(uint8)
func (_Getter *GetterSession) ManageRate(gi uint64) (uint8, error) {
	return _Getter.Contract.ManageRate(&_Getter.CallOpts, gi)
}

// ManageRate is a free data retrieval call binding the contract method 0x3f89be6e.
//
// Solidity: function manageRate(uint64 gi) view returns(uint8)
func (_Getter *GetterCallerSession) ManageRate(gi uint64) (uint8, error) {
	return _Getter.Contract.ManageRate(&_Getter.CallOpts, gi)
}

// Owners is a free data retrieval call binding the contract method 0x022914a7.
//
// Solidity: function owners(address ) view returns(bool)
func (_Getter *GetterCaller) Owners(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "owners", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Owners is a free data retrieval call binding the contract method 0x022914a7.
//
// Solidity: function owners(address ) view returns(bool)
func (_Getter *GetterSession) Owners(arg0 common.Address) (bool, error) {
	return _Getter.Contract.Owners(&_Getter.CallOpts, arg0)
}

// Owners is a free data retrieval call binding the contract method 0x022914a7.
//
// Solidity: function owners(address ) view returns(bool)
func (_Getter *GetterCallerSession) Owners(arg0 common.Address) (bool, error) {
	return _Getter.Contract.Owners(&_Getter.CallOpts, arg0)
}

// PleBalanceOf is a free data retrieval call binding the contract method 0x3623255d.
//
// Solidity: function pleBalanceOf(uint64 i, uint8 ti) view returns(uint256)
func (_Getter *GetterCaller) PleBalanceOf(opts *bind.CallOpts, i uint64, ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "pleBalanceOf", i, ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PleBalanceOf is a free data retrieval call binding the contract method 0x3623255d.
//
// Solidity: function pleBalanceOf(uint64 i, uint8 ti) view returns(uint256)
func (_Getter *GetterSession) PleBalanceOf(i uint64, ti uint8) (*big.Int, error) {
	return _Getter.Contract.PleBalanceOf(&_Getter.CallOpts, i, ti)
}

// PleBalanceOf is a free data retrieval call binding the contract method 0x3623255d.
//
// Solidity: function pleBalanceOf(uint64 i, uint8 ti) view returns(uint256)
func (_Getter *GetterCallerSession) PleBalanceOf(i uint64, ti uint8) (*big.Int, error) {
	return _Getter.Contract.PleBalanceOf(&_Getter.CallOpts, i, ti)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(uint16)
func (_Getter *GetterCaller) Version(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _Getter.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(uint16)
func (_Getter *GetterSession) Version() (uint16, error) {
	return _Getter.Contract.Version(&_Getter.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(uint16)
func (_Getter *GetterCallerSession) Version() (uint16, error) {
	return _Getter.Contract.Version(&_Getter.CallOpts)
}

// Add is a paid mutator transaction binding the contract method 0x4bf1b134.
//
// Solidity: function add(address _a, bool isSet, bytes[5] signs) returns()
func (_Getter *GetterTransactor) Add(opts *bind.TransactOpts, _a common.Address, isSet bool, signs [5][]byte) (*types.Transaction, error) {
	return _Getter.contract.Transact(opts, "add", _a, isSet, signs)
}

// Add is a paid mutator transaction binding the contract method 0x4bf1b134.
//
// Solidity: function add(address _a, bool isSet, bytes[5] signs) returns()
func (_Getter *GetterSession) Add(_a common.Address, isSet bool, signs [5][]byte) (*types.Transaction, error) {
	return _Getter.Contract.Add(&_Getter.TransactOpts, _a, isSet, signs)
}

// Add is a paid mutator transaction binding the contract method 0x4bf1b134.
//
// Solidity: function add(address _a, bool isSet, bytes[5] signs) returns()
func (_Getter *GetterTransactorSession) Add(_a common.Address, isSet bool, signs [5][]byte) (*types.Transaction, error) {
	return _Getter.Contract.Add(&_Getter.TransactOpts, _a, isSet, signs)
}

// GetterAddOwnerIterator is returned from FilterAddOwner and is used to iterate over the raw logs and unpacked data for AddOwner events raised by the Getter contract.
type GetterAddOwnerIterator struct {
	Event *GetterAddOwner // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GetterAddOwnerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GetterAddOwner)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GetterAddOwner)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GetterAddOwnerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GetterAddOwnerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GetterAddOwner represents a AddOwner event raised by the Getter contract.
type GetterAddOwner struct {
	From  common.Address
	IsSet bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAddOwner is a free log retrieval operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_Getter *GetterFilterer) FilterAddOwner(opts *bind.FilterOpts) (*GetterAddOwnerIterator, error) {

	logs, sub, err := _Getter.contract.FilterLogs(opts, "AddOwner")
	if err != nil {
		return nil, err
	}
	return &GetterAddOwnerIterator{contract: _Getter.contract, event: "AddOwner", logs: logs, sub: sub}, nil
}

// WatchAddOwner is a free log subscription operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_Getter *GetterFilterer) WatchAddOwner(opts *bind.WatchOpts, sink chan<- *GetterAddOwner) (event.Subscription, error) {

	logs, sub, err := _Getter.contract.WatchLogs(opts, "AddOwner")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GetterAddOwner)
				if err := _Getter.contract.UnpackLog(event, "AddOwner", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddOwner is a log parse operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_Getter *GetterFilterer) ParseAddOwner(log types.Log) (*GetterAddOwner, error) {
	event := new(GetterAddOwner)
	if err := _Getter.contract.UnpackLog(event, "AddOwner", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// IAuthABI is the input ABI used to generate the binding from.
const IAuthABI = "[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_h\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[5]\",\"name\":\"signs\",\"type\":\"bytes[5]\"}],\"name\":\"perm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IAuthFuncSigs maps the 4-byte function signature to its string representation.
var IAuthFuncSigs = map[string]string{
	"a96bba9d": "perm(bytes32,bytes[5])",
}

// IAuth is an auto generated Go binding around an Ethereum contract.
type IAuth struct {
	IAuthCaller     // Read-only binding to the contract
	IAuthTransactor // Write-only binding to the contract
	IAuthFilterer   // Log filterer for contract events
}

// IAuthCaller is an auto generated read-only Go binding around an Ethereum contract.
type IAuthCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IAuthTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IAuthTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IAuthFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IAuthFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IAuthSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IAuthSession struct {
	Contract     *IAuth            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IAuthCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IAuthCallerSession struct {
	Contract *IAuthCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// IAuthTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IAuthTransactorSession struct {
	Contract     *IAuthTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IAuthRaw is an auto generated low-level Go binding around an Ethereum contract.
type IAuthRaw struct {
	Contract *IAuth // Generic contract binding to access the raw methods on
}

// IAuthCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IAuthCallerRaw struct {
	Contract *IAuthCaller // Generic read-only contract binding to access the raw methods on
}

// IAuthTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IAuthTransactorRaw struct {
	Contract *IAuthTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIAuth creates a new instance of IAuth, bound to a specific deployed contract.
func NewIAuth(address common.Address, backend bind.ContractBackend) (*IAuth, error) {
	contract, err := bindIAuth(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IAuth{IAuthCaller: IAuthCaller{contract: contract}, IAuthTransactor: IAuthTransactor{contract: contract}, IAuthFilterer: IAuthFilterer{contract: contract}}, nil
}

// NewIAuthCaller creates a new read-only instance of IAuth, bound to a specific deployed contract.
func NewIAuthCaller(address common.Address, caller bind.ContractCaller) (*IAuthCaller, error) {
	contract, err := bindIAuth(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IAuthCaller{contract: contract}, nil
}

// NewIAuthTransactor creates a new write-only instance of IAuth, bound to a specific deployed contract.
func NewIAuthTransactor(address common.Address, transactor bind.ContractTransactor) (*IAuthTransactor, error) {
	contract, err := bindIAuth(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IAuthTransactor{contract: contract}, nil
}

// NewIAuthFilterer creates a new log filterer instance of IAuth, bound to a specific deployed contract.
func NewIAuthFilterer(address common.Address, filterer bind.ContractFilterer) (*IAuthFilterer, error) {
	contract, err := bindIAuth(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IAuthFilterer{contract: contract}, nil
}

// bindIAuth binds a generic wrapper to an already deployed contract.
func bindIAuth(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IAuthABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IAuth *IAuthRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IAuth.Contract.IAuthCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IAuth *IAuthRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IAuth.Contract.IAuthTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IAuth *IAuthRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IAuth.Contract.IAuthTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IAuth *IAuthCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IAuth.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IAuth *IAuthTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IAuth.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IAuth *IAuthTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IAuth.Contract.contract.Transact(opts, method, params...)
}

// Perm is a paid mutator transaction binding the contract method 0xa96bba9d.
//
// Solidity: function perm(bytes32 _h, bytes[5] signs) returns()
func (_IAuth *IAuthTransactor) Perm(opts *bind.TransactOpts, _h [32]byte, signs [5][]byte) (*types.Transaction, error) {
	return _IAuth.contract.Transact(opts, "perm", _h, signs)
}

// Perm is a paid mutator transaction binding the contract method 0xa96bba9d.
//
// Solidity: function perm(bytes32 _h, bytes[5] signs) returns()
func (_IAuth *IAuthSession) Perm(_h [32]byte, signs [5][]byte) (*types.Transaction, error) {
	return _IAuth.Contract.Perm(&_IAuth.TransactOpts, _h, signs)
}

// Perm is a paid mutator transaction binding the contract method 0xa96bba9d.
//
// Solidity: function perm(bytes32 _h, bytes[5] signs) returns()
func (_IAuth *IAuthTransactorSession) Perm(_h [32]byte, signs [5][]byte) (*types.Transaction, error) {
	return _IAuth.Contract.Perm(&_IAuth.TransactOpts, _h, signs)
}

// IFileSysGetterABI is the input ABI used to generate the binding from.
const IFileSysGetterABI = "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_ui\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_pi\",\"type\":\"uint64\"}],\"name\":\"getFsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"subNonce\",\"type\":\"uint64\"}],\"internalType\":\"structFsOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_gi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getGInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"internalType\":\"structGroupOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_pi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getSettleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hasPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"canPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"internalType\":\"structSettleOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_ui\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_pi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getStoreInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"internalType\":\"structStoreOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IFileSysGetterFuncSigs maps the 4-byte function signature to its string representation.
var IFileSysGetterFuncSigs = map[string]string{
	"fc3ba0ad": "balanceOf(uint64,uint8)",
	"59f7b572": "getFsInfo(uint64,uint64)",
	"5475cf8d": "getGInfo(uint64,uint8)",
	"64c64a4d": "getSettleInfo(uint64,uint8)",
	"8f328ecd": "getStoreInfo(uint64,uint64,uint8)",
}

// IFileSysGetter is an auto generated Go binding around an Ethereum contract.
type IFileSysGetter struct {
	IFileSysGetterCaller     // Read-only binding to the contract
	IFileSysGetterTransactor // Write-only binding to the contract
	IFileSysGetterFilterer   // Log filterer for contract events
}

// IFileSysGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IFileSysGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IFileSysGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IFileSysGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IFileSysGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IFileSysGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IFileSysGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IFileSysGetterSession struct {
	Contract     *IFileSysGetter   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IFileSysGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IFileSysGetterCallerSession struct {
	Contract *IFileSysGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// IFileSysGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IFileSysGetterTransactorSession struct {
	Contract     *IFileSysGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// IFileSysGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IFileSysGetterRaw struct {
	Contract *IFileSysGetter // Generic contract binding to access the raw methods on
}

// IFileSysGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IFileSysGetterCallerRaw struct {
	Contract *IFileSysGetterCaller // Generic read-only contract binding to access the raw methods on
}

// IFileSysGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IFileSysGetterTransactorRaw struct {
	Contract *IFileSysGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIFileSysGetter creates a new instance of IFileSysGetter, bound to a specific deployed contract.
func NewIFileSysGetter(address common.Address, backend bind.ContractBackend) (*IFileSysGetter, error) {
	contract, err := bindIFileSysGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IFileSysGetter{IFileSysGetterCaller: IFileSysGetterCaller{contract: contract}, IFileSysGetterTransactor: IFileSysGetterTransactor{contract: contract}, IFileSysGetterFilterer: IFileSysGetterFilterer{contract: contract}}, nil
}

// NewIFileSysGetterCaller creates a new read-only instance of IFileSysGetter, bound to a specific deployed contract.
func NewIFileSysGetterCaller(address common.Address, caller bind.ContractCaller) (*IFileSysGetterCaller, error) {
	contract, err := bindIFileSysGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IFileSysGetterCaller{contract: contract}, nil
}

// NewIFileSysGetterTransactor creates a new write-only instance of IFileSysGetter, bound to a specific deployed contract.
func NewIFileSysGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IFileSysGetterTransactor, error) {
	contract, err := bindIFileSysGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IFileSysGetterTransactor{contract: contract}, nil
}

// NewIFileSysGetterFilterer creates a new log filterer instance of IFileSysGetter, bound to a specific deployed contract.
func NewIFileSysGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IFileSysGetterFilterer, error) {
	contract, err := bindIFileSysGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IFileSysGetterFilterer{contract: contract}, nil
}

// bindIFileSysGetter binds a generic wrapper to an already deployed contract.
func bindIFileSysGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IFileSysGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IFileSysGetter *IFileSysGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IFileSysGetter.Contract.IFileSysGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IFileSysGetter *IFileSysGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IFileSysGetter.Contract.IFileSysGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IFileSysGetter *IFileSysGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IFileSysGetter.Contract.IFileSysGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IFileSysGetter *IFileSysGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IFileSysGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IFileSysGetter *IFileSysGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IFileSysGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IFileSysGetter *IFileSysGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IFileSysGetter.Contract.contract.Transact(opts, method, params...)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256, uint256)
func (_IFileSysGetter *IFileSysGetterCaller) BalanceOf(opts *bind.CallOpts, _i uint64, _ti uint8) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _IFileSysGetter.contract.Call(opts, &out, "balanceOf", _i, _ti)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256, uint256)
func (_IFileSysGetter *IFileSysGetterSession) BalanceOf(_i uint64, _ti uint8) (*big.Int, *big.Int, error) {
	return _IFileSysGetter.Contract.BalanceOf(&_IFileSysGetter.CallOpts, _i, _ti)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256, uint256)
func (_IFileSysGetter *IFileSysGetterCallerSession) BalanceOf(_i uint64, _ti uint8) (*big.Int, *big.Int, error) {
	return _IFileSysGetter.Contract.BalanceOf(&_IFileSysGetter.CallOpts, _i, _ti)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 _ui, uint64 _pi) view returns((uint64,uint64))
func (_IFileSysGetter *IFileSysGetterCaller) GetFsInfo(opts *bind.CallOpts, _ui uint64, _pi uint64) (FsOut, error) {
	var out []interface{}
	err := _IFileSysGetter.contract.Call(opts, &out, "getFsInfo", _ui, _pi)

	if err != nil {
		return *new(FsOut), err
	}

	out0 := *abi.ConvertType(out[0], new(FsOut)).(*FsOut)

	return out0, err

}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 _ui, uint64 _pi) view returns((uint64,uint64))
func (_IFileSysGetter *IFileSysGetterSession) GetFsInfo(_ui uint64, _pi uint64) (FsOut, error) {
	return _IFileSysGetter.Contract.GetFsInfo(&_IFileSysGetter.CallOpts, _ui, _pi)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 _ui, uint64 _pi) view returns((uint64,uint64))
func (_IFileSysGetter *IFileSysGetterCallerSession) GetFsInfo(_ui uint64, _pi uint64) (FsOut, error) {
	return _IFileSysGetter.Contract.GetFsInfo(&_IFileSysGetter.CallOpts, _ui, _pi)
}

// GetGInfo is a free data retrieval call binding the contract method 0x5475cf8d.
//
// Solidity: function getGInfo(uint64 _gi, uint8 _ti) view returns((uint64,uint256,uint256))
func (_IFileSysGetter *IFileSysGetterCaller) GetGInfo(opts *bind.CallOpts, _gi uint64, _ti uint8) (GroupOut, error) {
	var out []interface{}
	err := _IFileSysGetter.contract.Call(opts, &out, "getGInfo", _gi, _ti)

	if err != nil {
		return *new(GroupOut), err
	}

	out0 := *abi.ConvertType(out[0], new(GroupOut)).(*GroupOut)

	return out0, err

}

// GetGInfo is a free data retrieval call binding the contract method 0x5475cf8d.
//
// Solidity: function getGInfo(uint64 _gi, uint8 _ti) view returns((uint64,uint256,uint256))
func (_IFileSysGetter *IFileSysGetterSession) GetGInfo(_gi uint64, _ti uint8) (GroupOut, error) {
	return _IFileSysGetter.Contract.GetGInfo(&_IFileSysGetter.CallOpts, _gi, _ti)
}

// GetGInfo is a free data retrieval call binding the contract method 0x5475cf8d.
//
// Solidity: function getGInfo(uint64 _gi, uint8 _ti) view returns((uint64,uint256,uint256))
func (_IFileSysGetter *IFileSysGetterCallerSession) GetGInfo(_gi uint64, _ti uint8) (GroupOut, error) {
	return _IFileSysGetter.Contract.GetGInfo(&_IFileSysGetter.CallOpts, _gi, _ti)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 _pi, uint8 _ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_IFileSysGetter *IFileSysGetterCaller) GetSettleInfo(opts *bind.CallOpts, _pi uint64, _ti uint8) (SettleOut, error) {
	var out []interface{}
	err := _IFileSysGetter.contract.Call(opts, &out, "getSettleInfo", _pi, _ti)

	if err != nil {
		return *new(SettleOut), err
	}

	out0 := *abi.ConvertType(out[0], new(SettleOut)).(*SettleOut)

	return out0, err

}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 _pi, uint8 _ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_IFileSysGetter *IFileSysGetterSession) GetSettleInfo(_pi uint64, _ti uint8) (SettleOut, error) {
	return _IFileSysGetter.Contract.GetSettleInfo(&_IFileSysGetter.CallOpts, _pi, _ti)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 _pi, uint8 _ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_IFileSysGetter *IFileSysGetterCallerSession) GetSettleInfo(_pi uint64, _ti uint8) (SettleOut, error) {
	return _IFileSysGetter.Contract.GetSettleInfo(&_IFileSysGetter.CallOpts, _pi, _ti)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 _ui, uint64 _pi, uint8 _ti) view returns((uint64,uint64,uint64,uint256))
func (_IFileSysGetter *IFileSysGetterCaller) GetStoreInfo(opts *bind.CallOpts, _ui uint64, _pi uint64, _ti uint8) (StoreOut, error) {
	var out []interface{}
	err := _IFileSysGetter.contract.Call(opts, &out, "getStoreInfo", _ui, _pi, _ti)

	if err != nil {
		return *new(StoreOut), err
	}

	out0 := *abi.ConvertType(out[0], new(StoreOut)).(*StoreOut)

	return out0, err

}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 _ui, uint64 _pi, uint8 _ti) view returns((uint64,uint64,uint64,uint256))
func (_IFileSysGetter *IFileSysGetterSession) GetStoreInfo(_ui uint64, _pi uint64, _ti uint8) (StoreOut, error) {
	return _IFileSysGetter.Contract.GetStoreInfo(&_IFileSysGetter.CallOpts, _ui, _pi, _ti)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 _ui, uint64 _pi, uint8 _ti) view returns((uint64,uint64,uint64,uint256))
func (_IFileSysGetter *IFileSysGetterCallerSession) GetStoreInfo(_ui uint64, _pi uint64, _ti uint8) (StoreOut, error) {
	return _IFileSysGetter.Contract.GetStoreInfo(&_IFileSysGetter.CallOpts, _ui, _pi, _ti)
}

// IGetterABI is the input ABI used to generate the binding from.
const IGetterABI = "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"fsBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACnt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getAcc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ui\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pi\",\"type\":\"uint64\"}],\"name\":\"getFsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"subNonce\",\"type\":\"uint64\"}],\"internalType\":\"structFsOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGCnt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getGInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getGSInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"internalType\":\"structGroupOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"getK\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"getKCnt\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getKManage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getPInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"getPf\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getRInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isBan\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"rType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gIndex\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extra\",\"type\":\"bytes\"}],\"internalType\":\"structRoleOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getSStra\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"pi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getSettleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hasPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"canPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"internalType\":\"structSettleOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ui\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pi\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"getStoreInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"internalType\":\"structStoreOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tIndex\",\"type\":\"uint8\"}],\"name\":\"getTA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTCnt\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"name\":\"getTI\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"instances\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ki\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"kmBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gi\",\"type\":\"uint64\"}],\"name\":\"manageRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"ti\",\"type\":\"uint8\"}],\"name\":\"pleBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IGetterFuncSigs maps the 4-byte function signature to its string representation.
var IGetterFuncSigs = map[string]string{
	"6248af34": "fsBalanceOf(uint64,uint8)",
	"7264a551": "getACnt()",
	"caca4a06": "getAcc(address)",
	"9332aa6e": "getAddr(uint64)",
	"59f7b572": "getFsInfo(uint64,uint64)",
	"059e783d": "getGCnt()",
	"38add6a1": "getGInfo(uint64)",
	"24c7be2f": "getGSInfo(uint64,uint8)",
	"da41f894": "getK(uint64,uint64)",
	"4cfd1e2d": "getKCnt(uint64)",
	"929629d2": "getKManage(uint64)",
	"770609a8": "getLevel(uint64)",
	"50aa2329": "getPInfo(uint64)",
	"681e4819": "getPf(uint8,uint64)",
	"eb395fde": "getPledge(uint8)",
	"441abace": "getRInfo(address)",
	"dc698953": "getSStra(uint64)",
	"64c64a4d": "getSettleInfo(uint64,uint8)",
	"8f328ecd": "getStoreInfo(uint64,uint64,uint8)",
	"8bb4a637": "getTA(uint8)",
	"7600b86a": "getTCnt()",
	"2df2685f": "getTI(address)",
	"66c2b0cd": "getTotalPledge()",
	"3ec7d5b9": "instances(uint8)",
	"c988e9df": "kmBalanceOf(uint64,uint8,uint64)",
	"3f89be6e": "manageRate(uint64)",
	"3623255d": "pleBalanceOf(uint64,uint8)",
}

// IGetter is an auto generated Go binding around an Ethereum contract.
type IGetter struct {
	IGetterCaller     // Read-only binding to the contract
	IGetterTransactor // Write-only binding to the contract
	IGetterFilterer   // Log filterer for contract events
}

// IGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IGetterSession struct {
	Contract     *IGetter          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IGetterCallerSession struct {
	Contract *IGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// IGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IGetterTransactorSession struct {
	Contract     *IGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// IGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IGetterRaw struct {
	Contract *IGetter // Generic contract binding to access the raw methods on
}

// IGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IGetterCallerRaw struct {
	Contract *IGetterCaller // Generic read-only contract binding to access the raw methods on
}

// IGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IGetterTransactorRaw struct {
	Contract *IGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIGetter creates a new instance of IGetter, bound to a specific deployed contract.
func NewIGetter(address common.Address, backend bind.ContractBackend) (*IGetter, error) {
	contract, err := bindIGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IGetter{IGetterCaller: IGetterCaller{contract: contract}, IGetterTransactor: IGetterTransactor{contract: contract}, IGetterFilterer: IGetterFilterer{contract: contract}}, nil
}

// NewIGetterCaller creates a new read-only instance of IGetter, bound to a specific deployed contract.
func NewIGetterCaller(address common.Address, caller bind.ContractCaller) (*IGetterCaller, error) {
	contract, err := bindIGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IGetterCaller{contract: contract}, nil
}

// NewIGetterTransactor creates a new write-only instance of IGetter, bound to a specific deployed contract.
func NewIGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IGetterTransactor, error) {
	contract, err := bindIGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IGetterTransactor{contract: contract}, nil
}

// NewIGetterFilterer creates a new log filterer instance of IGetter, bound to a specific deployed contract.
func NewIGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IGetterFilterer, error) {
	contract, err := bindIGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IGetterFilterer{contract: contract}, nil
}

// bindIGetter binds a generic wrapper to an already deployed contract.
func bindIGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IGetter *IGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IGetter.Contract.IGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IGetter *IGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IGetter.Contract.IGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IGetter *IGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IGetter.Contract.IGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IGetter *IGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IGetter *IGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IGetter *IGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IGetter.Contract.contract.Transact(opts, method, params...)
}

// FsBalanceOf is a free data retrieval call binding the contract method 0x6248af34.
//
// Solidity: function fsBalanceOf(uint64 i, uint8 ti) view returns(uint256, uint256)
func (_IGetter *IGetterCaller) FsBalanceOf(opts *bind.CallOpts, i uint64, ti uint8) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "fsBalanceOf", i, ti)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// FsBalanceOf is a free data retrieval call binding the contract method 0x6248af34.
//
// Solidity: function fsBalanceOf(uint64 i, uint8 ti) view returns(uint256, uint256)
func (_IGetter *IGetterSession) FsBalanceOf(i uint64, ti uint8) (*big.Int, *big.Int, error) {
	return _IGetter.Contract.FsBalanceOf(&_IGetter.CallOpts, i, ti)
}

// FsBalanceOf is a free data retrieval call binding the contract method 0x6248af34.
//
// Solidity: function fsBalanceOf(uint64 i, uint8 ti) view returns(uint256, uint256)
func (_IGetter *IGetterCallerSession) FsBalanceOf(i uint64, ti uint8) (*big.Int, *big.Int, error) {
	return _IGetter.Contract.FsBalanceOf(&_IGetter.CallOpts, i, ti)
}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_IGetter *IGetterCaller) GetACnt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getACnt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_IGetter *IGetterSession) GetACnt() (uint64, error) {
	return _IGetter.Contract.GetACnt(&_IGetter.CallOpts)
}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_IGetter *IGetterCallerSession) GetACnt() (uint64, error) {
	return _IGetter.Contract.GetACnt(&_IGetter.CallOpts)
}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address a) view returns(uint64)
func (_IGetter *IGetterCaller) GetAcc(opts *bind.CallOpts, a common.Address) (uint64, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getAcc", a)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address a) view returns(uint64)
func (_IGetter *IGetterSession) GetAcc(a common.Address) (uint64, error) {
	return _IGetter.Contract.GetAcc(&_IGetter.CallOpts, a)
}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address a) view returns(uint64)
func (_IGetter *IGetterCallerSession) GetAcc(a common.Address) (uint64, error) {
	return _IGetter.Contract.GetAcc(&_IGetter.CallOpts, a)
}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 i) view returns(address)
func (_IGetter *IGetterCaller) GetAddr(opts *bind.CallOpts, i uint64) (common.Address, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getAddr", i)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 i) view returns(address)
func (_IGetter *IGetterSession) GetAddr(i uint64) (common.Address, error) {
	return _IGetter.Contract.GetAddr(&_IGetter.CallOpts, i)
}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 i) view returns(address)
func (_IGetter *IGetterCallerSession) GetAddr(i uint64) (common.Address, error) {
	return _IGetter.Contract.GetAddr(&_IGetter.CallOpts, i)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 ui, uint64 pi) view returns((uint64,uint64))
func (_IGetter *IGetterCaller) GetFsInfo(opts *bind.CallOpts, ui uint64, pi uint64) (FsOut, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getFsInfo", ui, pi)

	if err != nil {
		return *new(FsOut), err
	}

	out0 := *abi.ConvertType(out[0], new(FsOut)).(*FsOut)

	return out0, err

}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 ui, uint64 pi) view returns((uint64,uint64))
func (_IGetter *IGetterSession) GetFsInfo(ui uint64, pi uint64) (FsOut, error) {
	return _IGetter.Contract.GetFsInfo(&_IGetter.CallOpts, ui, pi)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x59f7b572.
//
// Solidity: function getFsInfo(uint64 ui, uint64 pi) view returns((uint64,uint64))
func (_IGetter *IGetterCallerSession) GetFsInfo(ui uint64, pi uint64) (FsOut, error) {
	return _IGetter.Contract.GetFsInfo(&_IGetter.CallOpts, ui, pi)
}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_IGetter *IGetterCaller) GetGCnt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getGCnt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_IGetter *IGetterSession) GetGCnt() (uint64, error) {
	return _IGetter.Contract.GetGCnt(&_IGetter.CallOpts)
}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_IGetter *IGetterCallerSession) GetGCnt() (uint64, error) {
	return _IGetter.Contract.GetGCnt(&_IGetter.CallOpts)
}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_IGetter *IGetterCaller) GetGInfo(opts *bind.CallOpts, i uint64) (bool, bool, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getGInfo", i)

	if err != nil {
		return *new(bool), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_IGetter *IGetterSession) GetGInfo(i uint64) (bool, bool, error) {
	return _IGetter.Contract.GetGInfo(&_IGetter.CallOpts, i)
}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_IGetter *IGetterCallerSession) GetGInfo(i uint64) (bool, bool, error) {
	return _IGetter.Contract.GetGInfo(&_IGetter.CallOpts, i)
}

// GetGSInfo is a free data retrieval call binding the contract method 0x24c7be2f.
//
// Solidity: function getGSInfo(uint64 gi, uint8 ti) view returns((uint64,uint256,uint256))
func (_IGetter *IGetterCaller) GetGSInfo(opts *bind.CallOpts, gi uint64, ti uint8) (GroupOut, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getGSInfo", gi, ti)

	if err != nil {
		return *new(GroupOut), err
	}

	out0 := *abi.ConvertType(out[0], new(GroupOut)).(*GroupOut)

	return out0, err

}

// GetGSInfo is a free data retrieval call binding the contract method 0x24c7be2f.
//
// Solidity: function getGSInfo(uint64 gi, uint8 ti) view returns((uint64,uint256,uint256))
func (_IGetter *IGetterSession) GetGSInfo(gi uint64, ti uint8) (GroupOut, error) {
	return _IGetter.Contract.GetGSInfo(&_IGetter.CallOpts, gi, ti)
}

// GetGSInfo is a free data retrieval call binding the contract method 0x24c7be2f.
//
// Solidity: function getGSInfo(uint64 gi, uint8 ti) view returns((uint64,uint256,uint256))
func (_IGetter *IGetterCallerSession) GetGSInfo(gi uint64, ti uint8) (GroupOut, error) {
	return _IGetter.Contract.GetGSInfo(&_IGetter.CallOpts, gi, ti)
}

// GetK is a free data retrieval call binding the contract method 0xda41f894.
//
// Solidity: function getK(uint64 i, uint64 gi) view returns(uint64)
func (_IGetter *IGetterCaller) GetK(opts *bind.CallOpts, i uint64, gi uint64) (uint64, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getK", i, gi)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetK is a free data retrieval call binding the contract method 0xda41f894.
//
// Solidity: function getK(uint64 i, uint64 gi) view returns(uint64)
func (_IGetter *IGetterSession) GetK(i uint64, gi uint64) (uint64, error) {
	return _IGetter.Contract.GetK(&_IGetter.CallOpts, i, gi)
}

// GetK is a free data retrieval call binding the contract method 0xda41f894.
//
// Solidity: function getK(uint64 i, uint64 gi) view returns(uint64)
func (_IGetter *IGetterCallerSession) GetK(i uint64, gi uint64) (uint64, error) {
	return _IGetter.Contract.GetK(&_IGetter.CallOpts, i, gi)
}

// GetKCnt is a free data retrieval call binding the contract method 0x4cfd1e2d.
//
// Solidity: function getKCnt(uint64 gi) view returns(uint8)
func (_IGetter *IGetterCaller) GetKCnt(opts *bind.CallOpts, gi uint64) (uint8, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getKCnt", gi)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetKCnt is a free data retrieval call binding the contract method 0x4cfd1e2d.
//
// Solidity: function getKCnt(uint64 gi) view returns(uint8)
func (_IGetter *IGetterSession) GetKCnt(gi uint64) (uint8, error) {
	return _IGetter.Contract.GetKCnt(&_IGetter.CallOpts, gi)
}

// GetKCnt is a free data retrieval call binding the contract method 0x4cfd1e2d.
//
// Solidity: function getKCnt(uint64 gi) view returns(uint8)
func (_IGetter *IGetterCallerSession) GetKCnt(gi uint64) (uint8, error) {
	return _IGetter.Contract.GetKCnt(&_IGetter.CallOpts, gi)
}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 i) view returns(address)
func (_IGetter *IGetterCaller) GetKManage(opts *bind.CallOpts, i uint64) (common.Address, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getKManage", i)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 i) view returns(address)
func (_IGetter *IGetterSession) GetKManage(i uint64) (common.Address, error) {
	return _IGetter.Contract.GetKManage(&_IGetter.CallOpts, i)
}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 i) view returns(address)
func (_IGetter *IGetterCallerSession) GetKManage(i uint64) (common.Address, error) {
	return _IGetter.Contract.GetKManage(&_IGetter.CallOpts, i)
}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_IGetter *IGetterCaller) GetLevel(opts *bind.CallOpts, i uint64) (uint8, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getLevel", i)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_IGetter *IGetterSession) GetLevel(i uint64) (uint8, error) {
	return _IGetter.Contract.GetLevel(&_IGetter.CallOpts, i)
}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_IGetter *IGetterCallerSession) GetLevel(i uint64) (uint8, error) {
	return _IGetter.Contract.GetLevel(&_IGetter.CallOpts, i)
}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 i) view returns(uint256, uint256)
func (_IGetter *IGetterCaller) GetPInfo(opts *bind.CallOpts, i uint64) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getPInfo", i)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 i) view returns(uint256, uint256)
func (_IGetter *IGetterSession) GetPInfo(i uint64) (*big.Int, *big.Int, error) {
	return _IGetter.Contract.GetPInfo(&_IGetter.CallOpts, i)
}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 i) view returns(uint256, uint256)
func (_IGetter *IGetterCallerSession) GetPInfo(i uint64) (*big.Int, *big.Int, error) {
	return _IGetter.Contract.GetPInfo(&_IGetter.CallOpts, i)
}

// GetPf is a free data retrieval call binding the contract method 0x681e4819.
//
// Solidity: function getPf(uint8 ti, uint64 gi) view returns(uint64, uint256)
func (_IGetter *IGetterCaller) GetPf(opts *bind.CallOpts, ti uint8, gi uint64) (uint64, *big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getPf", ti, gi)

	if err != nil {
		return *new(uint64), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetPf is a free data retrieval call binding the contract method 0x681e4819.
//
// Solidity: function getPf(uint8 ti, uint64 gi) view returns(uint64, uint256)
func (_IGetter *IGetterSession) GetPf(ti uint8, gi uint64) (uint64, *big.Int, error) {
	return _IGetter.Contract.GetPf(&_IGetter.CallOpts, ti, gi)
}

// GetPf is a free data retrieval call binding the contract method 0x681e4819.
//
// Solidity: function getPf(uint8 ti, uint64 gi) view returns(uint64, uint256)
func (_IGetter *IGetterCallerSession) GetPf(ti uint8, gi uint64) (uint64, *big.Int, error) {
	return _IGetter.Contract.GetPf(&_IGetter.CallOpts, ti, gi)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 ti) view returns(uint256)
func (_IGetter *IGetterCaller) GetPledge(opts *bind.CallOpts, ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getPledge", ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 ti) view returns(uint256)
func (_IGetter *IGetterSession) GetPledge(ti uint8) (*big.Int, error) {
	return _IGetter.Contract.GetPledge(&_IGetter.CallOpts, ti)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 ti) view returns(uint256)
func (_IGetter *IGetterCallerSession) GetPledge(ti uint8) (*big.Int, error) {
	return _IGetter.Contract.GetPledge(&_IGetter.CallOpts, ti)
}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_IGetter *IGetterCaller) GetRInfo(opts *bind.CallOpts, a common.Address) (RoleOut, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getRInfo", a)

	if err != nil {
		return *new(RoleOut), err
	}

	out0 := *abi.ConvertType(out[0], new(RoleOut)).(*RoleOut)

	return out0, err

}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_IGetter *IGetterSession) GetRInfo(a common.Address) (RoleOut, error) {
	return _IGetter.Contract.GetRInfo(&_IGetter.CallOpts, a)
}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_IGetter *IGetterCallerSession) GetRInfo(a common.Address) (RoleOut, error) {
	return _IGetter.Contract.GetRInfo(&_IGetter.CallOpts, a)
}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_IGetter *IGetterCaller) GetSStra(opts *bind.CallOpts, i uint64) (uint8, uint8, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getSStra", i)

	if err != nil {
		return *new(uint8), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new(uint8)).(*uint8)

	return out0, out1, err

}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_IGetter *IGetterSession) GetSStra(i uint64) (uint8, uint8, error) {
	return _IGetter.Contract.GetSStra(&_IGetter.CallOpts, i)
}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_IGetter *IGetterCallerSession) GetSStra(i uint64) (uint8, uint8, error) {
	return _IGetter.Contract.GetSStra(&_IGetter.CallOpts, i)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 pi, uint8 ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_IGetter *IGetterCaller) GetSettleInfo(opts *bind.CallOpts, pi uint64, ti uint8) (SettleOut, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getSettleInfo", pi, ti)

	if err != nil {
		return *new(SettleOut), err
	}

	out0 := *abi.ConvertType(out[0], new(SettleOut)).(*SettleOut)

	return out0, err

}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 pi, uint8 ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_IGetter *IGetterSession) GetSettleInfo(pi uint64, ti uint8) (SettleOut, error) {
	return _IGetter.Contract.GetSettleInfo(&_IGetter.CallOpts, pi, ti)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x64c64a4d.
//
// Solidity: function getSettleInfo(uint64 pi, uint8 ti) view returns((uint64,uint64,uint256,uint256,uint256,uint256,uint256))
func (_IGetter *IGetterCallerSession) GetSettleInfo(pi uint64, ti uint8) (SettleOut, error) {
	return _IGetter.Contract.GetSettleInfo(&_IGetter.CallOpts, pi, ti)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 ui, uint64 pi, uint8 ti) view returns((uint64,uint64,uint64,uint256))
func (_IGetter *IGetterCaller) GetStoreInfo(opts *bind.CallOpts, ui uint64, pi uint64, ti uint8) (StoreOut, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getStoreInfo", ui, pi, ti)

	if err != nil {
		return *new(StoreOut), err
	}

	out0 := *abi.ConvertType(out[0], new(StoreOut)).(*StoreOut)

	return out0, err

}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 ui, uint64 pi, uint8 ti) view returns((uint64,uint64,uint64,uint256))
func (_IGetter *IGetterSession) GetStoreInfo(ui uint64, pi uint64, ti uint8) (StoreOut, error) {
	return _IGetter.Contract.GetStoreInfo(&_IGetter.CallOpts, ui, pi, ti)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x8f328ecd.
//
// Solidity: function getStoreInfo(uint64 ui, uint64 pi, uint8 ti) view returns((uint64,uint64,uint64,uint256))
func (_IGetter *IGetterCallerSession) GetStoreInfo(ui uint64, pi uint64, ti uint8) (StoreOut, error) {
	return _IGetter.Contract.GetStoreInfo(&_IGetter.CallOpts, ui, pi, ti)
}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 tIndex) view returns(address)
func (_IGetter *IGetterCaller) GetTA(opts *bind.CallOpts, tIndex uint8) (common.Address, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getTA", tIndex)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 tIndex) view returns(address)
func (_IGetter *IGetterSession) GetTA(tIndex uint8) (common.Address, error) {
	return _IGetter.Contract.GetTA(&_IGetter.CallOpts, tIndex)
}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 tIndex) view returns(address)
func (_IGetter *IGetterCallerSession) GetTA(tIndex uint8) (common.Address, error) {
	return _IGetter.Contract.GetTA(&_IGetter.CallOpts, tIndex)
}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_IGetter *IGetterCaller) GetTCnt(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getTCnt")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_IGetter *IGetterSession) GetTCnt() (uint8, error) {
	return _IGetter.Contract.GetTCnt(&_IGetter.CallOpts)
}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_IGetter *IGetterCallerSession) GetTCnt() (uint8, error) {
	return _IGetter.Contract.GetTCnt(&_IGetter.CallOpts)
}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address t) view returns(uint8, bool, bool)
func (_IGetter *IGetterCaller) GetTI(opts *bind.CallOpts, t common.Address) (uint8, bool, bool, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getTI", t)

	if err != nil {
		return *new(uint8), *new(bool), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)

	return out0, out1, out2, err

}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address t) view returns(uint8, bool, bool)
func (_IGetter *IGetterSession) GetTI(t common.Address) (uint8, bool, bool, error) {
	return _IGetter.Contract.GetTI(&_IGetter.CallOpts, t)
}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address t) view returns(uint8, bool, bool)
func (_IGetter *IGetterCallerSession) GetTI(t common.Address) (uint8, bool, bool, error) {
	return _IGetter.Contract.GetTI(&_IGetter.CallOpts, t)
}

// GetTotalPledge is a free data retrieval call binding the contract method 0x66c2b0cd.
//
// Solidity: function getTotalPledge() view returns(uint256)
func (_IGetter *IGetterCaller) GetTotalPledge(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "getTotalPledge")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalPledge is a free data retrieval call binding the contract method 0x66c2b0cd.
//
// Solidity: function getTotalPledge() view returns(uint256)
func (_IGetter *IGetterSession) GetTotalPledge() (*big.Int, error) {
	return _IGetter.Contract.GetTotalPledge(&_IGetter.CallOpts)
}

// GetTotalPledge is a free data retrieval call binding the contract method 0x66c2b0cd.
//
// Solidity: function getTotalPledge() view returns(uint256)
func (_IGetter *IGetterCallerSession) GetTotalPledge() (*big.Int, error) {
	return _IGetter.Contract.GetTotalPledge(&_IGetter.CallOpts)
}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_IGetter *IGetterCaller) Instances(opts *bind.CallOpts, _type uint8) (common.Address, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "instances", _type)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_IGetter *IGetterSession) Instances(_type uint8) (common.Address, error) {
	return _IGetter.Contract.Instances(&_IGetter.CallOpts, _type)
}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_IGetter *IGetterCallerSession) Instances(_type uint8) (common.Address, error) {
	return _IGetter.Contract.Instances(&_IGetter.CallOpts, _type)
}

// KmBalanceOf is a free data retrieval call binding the contract method 0xc988e9df.
//
// Solidity: function kmBalanceOf(uint64 ki, uint8 ti, uint64 gi) view returns(uint256, uint256)
func (_IGetter *IGetterCaller) KmBalanceOf(opts *bind.CallOpts, ki uint64, ti uint8, gi uint64) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "kmBalanceOf", ki, ti, gi)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// KmBalanceOf is a free data retrieval call binding the contract method 0xc988e9df.
//
// Solidity: function kmBalanceOf(uint64 ki, uint8 ti, uint64 gi) view returns(uint256, uint256)
func (_IGetter *IGetterSession) KmBalanceOf(ki uint64, ti uint8, gi uint64) (*big.Int, *big.Int, error) {
	return _IGetter.Contract.KmBalanceOf(&_IGetter.CallOpts, ki, ti, gi)
}

// KmBalanceOf is a free data retrieval call binding the contract method 0xc988e9df.
//
// Solidity: function kmBalanceOf(uint64 ki, uint8 ti, uint64 gi) view returns(uint256, uint256)
func (_IGetter *IGetterCallerSession) KmBalanceOf(ki uint64, ti uint8, gi uint64) (*big.Int, *big.Int, error) {
	return _IGetter.Contract.KmBalanceOf(&_IGetter.CallOpts, ki, ti, gi)
}

// ManageRate is a free data retrieval call binding the contract method 0x3f89be6e.
//
// Solidity: function manageRate(uint64 gi) view returns(uint8)
func (_IGetter *IGetterCaller) ManageRate(opts *bind.CallOpts, gi uint64) (uint8, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "manageRate", gi)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ManageRate is a free data retrieval call binding the contract method 0x3f89be6e.
//
// Solidity: function manageRate(uint64 gi) view returns(uint8)
func (_IGetter *IGetterSession) ManageRate(gi uint64) (uint8, error) {
	return _IGetter.Contract.ManageRate(&_IGetter.CallOpts, gi)
}

// ManageRate is a free data retrieval call binding the contract method 0x3f89be6e.
//
// Solidity: function manageRate(uint64 gi) view returns(uint8)
func (_IGetter *IGetterCallerSession) ManageRate(gi uint64) (uint8, error) {
	return _IGetter.Contract.ManageRate(&_IGetter.CallOpts, gi)
}

// PleBalanceOf is a free data retrieval call binding the contract method 0x3623255d.
//
// Solidity: function pleBalanceOf(uint64 i, uint8 ti) view returns(uint256)
func (_IGetter *IGetterCaller) PleBalanceOf(opts *bind.CallOpts, i uint64, ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _IGetter.contract.Call(opts, &out, "pleBalanceOf", i, ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PleBalanceOf is a free data retrieval call binding the contract method 0x3623255d.
//
// Solidity: function pleBalanceOf(uint64 i, uint8 ti) view returns(uint256)
func (_IGetter *IGetterSession) PleBalanceOf(i uint64, ti uint8) (*big.Int, error) {
	return _IGetter.Contract.PleBalanceOf(&_IGetter.CallOpts, i, ti)
}

// PleBalanceOf is a free data retrieval call binding the contract method 0x3623255d.
//
// Solidity: function pleBalanceOf(uint64 i, uint8 ti) view returns(uint256)
func (_IGetter *IGetterCallerSession) PleBalanceOf(i uint64, ti uint8) (*big.Int, error) {
	return _IGetter.Contract.PleBalanceOf(&_IGetter.CallOpts, i, ti)
}

// IGroupGetterABI is the input ABI used to generate the binding from.
const IGroupGetterABI = "[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_rType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"_gi\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_pm\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"checkG\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGCnt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getGInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"}],\"name\":\"getKManage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"}],\"name\":\"getPInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"getSStra\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IGroupGetterFuncSigs maps the 4-byte function signature to its string representation.
var IGroupGetterFuncSigs = map[string]string{
	"4acc2468": "add(uint8,uint64,uint256)",
	"83889fe3": "checkG(uint64)",
	"059e783d": "getGCnt()",
	"38add6a1": "getGInfo(uint64)",
	"929629d2": "getKManage(uint64)",
	"770609a8": "getLevel(uint64)",
	"50aa2329": "getPInfo(uint64)",
	"dc698953": "getSStra(uint64)",
}

// IGroupGetter is an auto generated Go binding around an Ethereum contract.
type IGroupGetter struct {
	IGroupGetterCaller     // Read-only binding to the contract
	IGroupGetterTransactor // Write-only binding to the contract
	IGroupGetterFilterer   // Log filterer for contract events
}

// IGroupGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IGroupGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IGroupGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IGroupGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IGroupGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IGroupGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IGroupGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IGroupGetterSession struct {
	Contract     *IGroupGetter     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IGroupGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IGroupGetterCallerSession struct {
	Contract *IGroupGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// IGroupGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IGroupGetterTransactorSession struct {
	Contract     *IGroupGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// IGroupGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IGroupGetterRaw struct {
	Contract *IGroupGetter // Generic contract binding to access the raw methods on
}

// IGroupGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IGroupGetterCallerRaw struct {
	Contract *IGroupGetterCaller // Generic read-only contract binding to access the raw methods on
}

// IGroupGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IGroupGetterTransactorRaw struct {
	Contract *IGroupGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIGroupGetter creates a new instance of IGroupGetter, bound to a specific deployed contract.
func NewIGroupGetter(address common.Address, backend bind.ContractBackend) (*IGroupGetter, error) {
	contract, err := bindIGroupGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IGroupGetter{IGroupGetterCaller: IGroupGetterCaller{contract: contract}, IGroupGetterTransactor: IGroupGetterTransactor{contract: contract}, IGroupGetterFilterer: IGroupGetterFilterer{contract: contract}}, nil
}

// NewIGroupGetterCaller creates a new read-only instance of IGroupGetter, bound to a specific deployed contract.
func NewIGroupGetterCaller(address common.Address, caller bind.ContractCaller) (*IGroupGetterCaller, error) {
	contract, err := bindIGroupGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IGroupGetterCaller{contract: contract}, nil
}

// NewIGroupGetterTransactor creates a new write-only instance of IGroupGetter, bound to a specific deployed contract.
func NewIGroupGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IGroupGetterTransactor, error) {
	contract, err := bindIGroupGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IGroupGetterTransactor{contract: contract}, nil
}

// NewIGroupGetterFilterer creates a new log filterer instance of IGroupGetter, bound to a specific deployed contract.
func NewIGroupGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IGroupGetterFilterer, error) {
	contract, err := bindIGroupGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IGroupGetterFilterer{contract: contract}, nil
}

// bindIGroupGetter binds a generic wrapper to an already deployed contract.
func bindIGroupGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IGroupGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IGroupGetter *IGroupGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IGroupGetter.Contract.IGroupGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IGroupGetter *IGroupGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IGroupGetter.Contract.IGroupGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IGroupGetter *IGroupGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IGroupGetter.Contract.IGroupGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IGroupGetter *IGroupGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IGroupGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IGroupGetter *IGroupGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IGroupGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IGroupGetter *IGroupGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IGroupGetter.Contract.contract.Transact(opts, method, params...)
}

// Add is a free data retrieval call binding the contract method 0x4acc2468.
//
// Solidity: function add(uint8 _rType, uint64 _gi, uint256 _pm) view returns()
func (_IGroupGetter *IGroupGetterCaller) Add(opts *bind.CallOpts, _rType uint8, _gi uint64, _pm *big.Int) error {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "add", _rType, _gi, _pm)

	if err != nil {
		return err
	}

	return err

}

// Add is a free data retrieval call binding the contract method 0x4acc2468.
//
// Solidity: function add(uint8 _rType, uint64 _gi, uint256 _pm) view returns()
func (_IGroupGetter *IGroupGetterSession) Add(_rType uint8, _gi uint64, _pm *big.Int) error {
	return _IGroupGetter.Contract.Add(&_IGroupGetter.CallOpts, _rType, _gi, _pm)
}

// Add is a free data retrieval call binding the contract method 0x4acc2468.
//
// Solidity: function add(uint8 _rType, uint64 _gi, uint256 _pm) view returns()
func (_IGroupGetter *IGroupGetterCallerSession) Add(_rType uint8, _gi uint64, _pm *big.Int) error {
	return _IGroupGetter.Contract.Add(&_IGroupGetter.CallOpts, _rType, _gi, _pm)
}

// CheckG is a free data retrieval call binding the contract method 0x83889fe3.
//
// Solidity: function checkG(uint64 i) view returns()
func (_IGroupGetter *IGroupGetterCaller) CheckG(opts *bind.CallOpts, i uint64) error {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "checkG", i)

	if err != nil {
		return err
	}

	return err

}

// CheckG is a free data retrieval call binding the contract method 0x83889fe3.
//
// Solidity: function checkG(uint64 i) view returns()
func (_IGroupGetter *IGroupGetterSession) CheckG(i uint64) error {
	return _IGroupGetter.Contract.CheckG(&_IGroupGetter.CallOpts, i)
}

// CheckG is a free data retrieval call binding the contract method 0x83889fe3.
//
// Solidity: function checkG(uint64 i) view returns()
func (_IGroupGetter *IGroupGetterCallerSession) CheckG(i uint64) error {
	return _IGroupGetter.Contract.CheckG(&_IGroupGetter.CallOpts, i)
}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_IGroupGetter *IGroupGetterCaller) GetGCnt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "getGCnt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_IGroupGetter *IGroupGetterSession) GetGCnt() (uint64, error) {
	return _IGroupGetter.Contract.GetGCnt(&_IGroupGetter.CallOpts)
}

// GetGCnt is a free data retrieval call binding the contract method 0x059e783d.
//
// Solidity: function getGCnt() view returns(uint64)
func (_IGroupGetter *IGroupGetterCallerSession) GetGCnt() (uint64, error) {
	return _IGroupGetter.Contract.GetGCnt(&_IGroupGetter.CallOpts)
}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_IGroupGetter *IGroupGetterCaller) GetGInfo(opts *bind.CallOpts, i uint64) (bool, bool, error) {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "getGInfo", i)

	if err != nil {
		return *new(bool), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_IGroupGetter *IGroupGetterSession) GetGInfo(i uint64) (bool, bool, error) {
	return _IGroupGetter.Contract.GetGInfo(&_IGroupGetter.CallOpts, i)
}

// GetGInfo is a free data retrieval call binding the contract method 0x38add6a1.
//
// Solidity: function getGInfo(uint64 i) view returns(bool, bool)
func (_IGroupGetter *IGroupGetterCallerSession) GetGInfo(i uint64) (bool, bool, error) {
	return _IGroupGetter.Contract.GetGInfo(&_IGroupGetter.CallOpts, i)
}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 _i) view returns(address)
func (_IGroupGetter *IGroupGetterCaller) GetKManage(opts *bind.CallOpts, _i uint64) (common.Address, error) {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "getKManage", _i)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 _i) view returns(address)
func (_IGroupGetter *IGroupGetterSession) GetKManage(_i uint64) (common.Address, error) {
	return _IGroupGetter.Contract.GetKManage(&_IGroupGetter.CallOpts, _i)
}

// GetKManage is a free data retrieval call binding the contract method 0x929629d2.
//
// Solidity: function getKManage(uint64 _i) view returns(address)
func (_IGroupGetter *IGroupGetterCallerSession) GetKManage(_i uint64) (common.Address, error) {
	return _IGroupGetter.Contract.GetKManage(&_IGroupGetter.CallOpts, _i)
}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_IGroupGetter *IGroupGetterCaller) GetLevel(opts *bind.CallOpts, i uint64) (uint8, error) {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "getLevel", i)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_IGroupGetter *IGroupGetterSession) GetLevel(i uint64) (uint8, error) {
	return _IGroupGetter.Contract.GetLevel(&_IGroupGetter.CallOpts, i)
}

// GetLevel is a free data retrieval call binding the contract method 0x770609a8.
//
// Solidity: function getLevel(uint64 i) view returns(uint8)
func (_IGroupGetter *IGroupGetterCallerSession) GetLevel(i uint64) (uint8, error) {
	return _IGroupGetter.Contract.GetLevel(&_IGroupGetter.CallOpts, i)
}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 _i) view returns(uint256, uint256)
func (_IGroupGetter *IGroupGetterCaller) GetPInfo(opts *bind.CallOpts, _i uint64) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "getPInfo", _i)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 _i) view returns(uint256, uint256)
func (_IGroupGetter *IGroupGetterSession) GetPInfo(_i uint64) (*big.Int, *big.Int, error) {
	return _IGroupGetter.Contract.GetPInfo(&_IGroupGetter.CallOpts, _i)
}

// GetPInfo is a free data retrieval call binding the contract method 0x50aa2329.
//
// Solidity: function getPInfo(uint64 _i) view returns(uint256, uint256)
func (_IGroupGetter *IGroupGetterCallerSession) GetPInfo(_i uint64) (*big.Int, *big.Int, error) {
	return _IGroupGetter.Contract.GetPInfo(&_IGroupGetter.CallOpts, _i)
}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_IGroupGetter *IGroupGetterCaller) GetSStra(opts *bind.CallOpts, i uint64) (uint8, uint8, error) {
	var out []interface{}
	err := _IGroupGetter.contract.Call(opts, &out, "getSStra", i)

	if err != nil {
		return *new(uint8), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new(uint8)).(*uint8)

	return out0, out1, err

}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_IGroupGetter *IGroupGetterSession) GetSStra(i uint64) (uint8, uint8, error) {
	return _IGroupGetter.Contract.GetSStra(&_IGroupGetter.CallOpts, i)
}

// GetSStra is a free data retrieval call binding the contract method 0xdc698953.
//
// Solidity: function getSStra(uint64 i) view returns(uint8, uint8)
func (_IGroupGetter *IGroupGetterCallerSession) GetSStra(i uint64) (uint8, uint8, error) {
	return _IGroupGetter.Contract.GetSStra(&_IGroupGetter.CallOpts, i)
}

// IInstanceABI is the input ABI used to generate the binding from.
const IInstanceABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Alter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"instances\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IInstanceFuncSigs maps the 4-byte function signature to its string representation.
var IInstanceFuncSigs = map[string]string{
	"3ec7d5b9": "instances(uint8)",
}

// IInstance is an auto generated Go binding around an Ethereum contract.
type IInstance struct {
	IInstanceCaller     // Read-only binding to the contract
	IInstanceTransactor // Write-only binding to the contract
	IInstanceFilterer   // Log filterer for contract events
}

// IInstanceCaller is an auto generated read-only Go binding around an Ethereum contract.
type IInstanceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IInstanceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IInstanceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IInstanceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IInstanceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IInstanceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IInstanceSession struct {
	Contract     *IInstance        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IInstanceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IInstanceCallerSession struct {
	Contract *IInstanceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// IInstanceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IInstanceTransactorSession struct {
	Contract     *IInstanceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// IInstanceRaw is an auto generated low-level Go binding around an Ethereum contract.
type IInstanceRaw struct {
	Contract *IInstance // Generic contract binding to access the raw methods on
}

// IInstanceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IInstanceCallerRaw struct {
	Contract *IInstanceCaller // Generic read-only contract binding to access the raw methods on
}

// IInstanceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IInstanceTransactorRaw struct {
	Contract *IInstanceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIInstance creates a new instance of IInstance, bound to a specific deployed contract.
func NewIInstance(address common.Address, backend bind.ContractBackend) (*IInstance, error) {
	contract, err := bindIInstance(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IInstance{IInstanceCaller: IInstanceCaller{contract: contract}, IInstanceTransactor: IInstanceTransactor{contract: contract}, IInstanceFilterer: IInstanceFilterer{contract: contract}}, nil
}

// NewIInstanceCaller creates a new read-only instance of IInstance, bound to a specific deployed contract.
func NewIInstanceCaller(address common.Address, caller bind.ContractCaller) (*IInstanceCaller, error) {
	contract, err := bindIInstance(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IInstanceCaller{contract: contract}, nil
}

// NewIInstanceTransactor creates a new write-only instance of IInstance, bound to a specific deployed contract.
func NewIInstanceTransactor(address common.Address, transactor bind.ContractTransactor) (*IInstanceTransactor, error) {
	contract, err := bindIInstance(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IInstanceTransactor{contract: contract}, nil
}

// NewIInstanceFilterer creates a new log filterer instance of IInstance, bound to a specific deployed contract.
func NewIInstanceFilterer(address common.Address, filterer bind.ContractFilterer) (*IInstanceFilterer, error) {
	contract, err := bindIInstance(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IInstanceFilterer{contract: contract}, nil
}

// bindIInstance binds a generic wrapper to an already deployed contract.
func bindIInstance(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IInstanceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IInstance *IInstanceRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IInstance.Contract.IInstanceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IInstance *IInstanceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IInstance.Contract.IInstanceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IInstance *IInstanceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IInstance.Contract.IInstanceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IInstance *IInstanceCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IInstance.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IInstance *IInstanceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IInstance.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IInstance *IInstanceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IInstance.Contract.contract.Transact(opts, method, params...)
}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_IInstance *IInstanceCaller) Instances(opts *bind.CallOpts, _type uint8) (common.Address, error) {
	var out []interface{}
	err := _IInstance.contract.Call(opts, &out, "instances", _type)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_IInstance *IInstanceSession) Instances(_type uint8) (common.Address, error) {
	return _IInstance.Contract.Instances(&_IInstance.CallOpts, _type)
}

// Instances is a free data retrieval call binding the contract method 0x3ec7d5b9.
//
// Solidity: function instances(uint8 _type) view returns(address)
func (_IInstance *IInstanceCallerSession) Instances(_type uint8) (common.Address, error) {
	return _IInstance.Contract.Instances(&_IInstance.CallOpts, _type)
}

// IInstanceAlterIterator is returned from FilterAlter and is used to iterate over the raw logs and unpacked data for Alter events raised by the IInstance contract.
type IInstanceAlterIterator struct {
	Event *IInstanceAlter // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IInstanceAlterIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IInstanceAlter)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IInstanceAlter)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IInstanceAlterIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IInstanceAlterIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IInstanceAlter represents a Alter event raised by the IInstance contract.
type IInstanceAlter struct {
	Type uint8
	From common.Address
	To   common.Address
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterAlter is a free log retrieval operation binding the contract event 0x69da8aaa18d0d64ebdd4d982e4d32ac4aaab1fe0c1034b19846e51a61fcc0f02.
//
// Solidity: event Alter(uint8 _type, address from, address to)
func (_IInstance *IInstanceFilterer) FilterAlter(opts *bind.FilterOpts) (*IInstanceAlterIterator, error) {

	logs, sub, err := _IInstance.contract.FilterLogs(opts, "Alter")
	if err != nil {
		return nil, err
	}
	return &IInstanceAlterIterator{contract: _IInstance.contract, event: "Alter", logs: logs, sub: sub}, nil
}

// WatchAlter is a free log subscription operation binding the contract event 0x69da8aaa18d0d64ebdd4d982e4d32ac4aaab1fe0c1034b19846e51a61fcc0f02.
//
// Solidity: event Alter(uint8 _type, address from, address to)
func (_IInstance *IInstanceFilterer) WatchAlter(opts *bind.WatchOpts, sink chan<- *IInstanceAlter) (event.Subscription, error) {

	logs, sub, err := _IInstance.contract.WatchLogs(opts, "Alter")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IInstanceAlter)
				if err := _IInstance.contract.UnpackLog(event, "Alter", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAlter is a log parse operation binding the contract event 0x69da8aaa18d0d64ebdd4d982e4d32ac4aaab1fe0c1034b19846e51a61fcc0f02.
//
// Solidity: event Alter(uint8 _type, address from, address to)
func (_IInstance *IInstanceFilterer) ParseAlter(log types.Log) (*IInstanceAlter, error) {
	event := new(IInstanceAlter)
	if err := _IInstance.contract.UnpackLog(event, "Alter", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// IIssuanceABI is the input ABI used to generate the binding from.
const IIssuanceABI = "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_size\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_sPrice\",\"type\":\"uint256\"}],\"name\":\"issu\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IIssuanceFuncSigs maps the 4-byte function signature to its string representation.
var IIssuanceFuncSigs = map[string]string{
	"13df3828": "issu(uint64,uint64,uint64,uint256)",
}

// IIssuance is an auto generated Go binding around an Ethereum contract.
type IIssuance struct {
	IIssuanceCaller     // Read-only binding to the contract
	IIssuanceTransactor // Write-only binding to the contract
	IIssuanceFilterer   // Log filterer for contract events
}

// IIssuanceCaller is an auto generated read-only Go binding around an Ethereum contract.
type IIssuanceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IIssuanceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IIssuanceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IIssuanceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IIssuanceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IIssuanceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IIssuanceSession struct {
	Contract     *IIssuance        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IIssuanceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IIssuanceCallerSession struct {
	Contract *IIssuanceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// IIssuanceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IIssuanceTransactorSession struct {
	Contract     *IIssuanceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// IIssuanceRaw is an auto generated low-level Go binding around an Ethereum contract.
type IIssuanceRaw struct {
	Contract *IIssuance // Generic contract binding to access the raw methods on
}

// IIssuanceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IIssuanceCallerRaw struct {
	Contract *IIssuanceCaller // Generic read-only contract binding to access the raw methods on
}

// IIssuanceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IIssuanceTransactorRaw struct {
	Contract *IIssuanceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIIssuance creates a new instance of IIssuance, bound to a specific deployed contract.
func NewIIssuance(address common.Address, backend bind.ContractBackend) (*IIssuance, error) {
	contract, err := bindIIssuance(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IIssuance{IIssuanceCaller: IIssuanceCaller{contract: contract}, IIssuanceTransactor: IIssuanceTransactor{contract: contract}, IIssuanceFilterer: IIssuanceFilterer{contract: contract}}, nil
}

// NewIIssuanceCaller creates a new read-only instance of IIssuance, bound to a specific deployed contract.
func NewIIssuanceCaller(address common.Address, caller bind.ContractCaller) (*IIssuanceCaller, error) {
	contract, err := bindIIssuance(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IIssuanceCaller{contract: contract}, nil
}

// NewIIssuanceTransactor creates a new write-only instance of IIssuance, bound to a specific deployed contract.
func NewIIssuanceTransactor(address common.Address, transactor bind.ContractTransactor) (*IIssuanceTransactor, error) {
	contract, err := bindIIssuance(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IIssuanceTransactor{contract: contract}, nil
}

// NewIIssuanceFilterer creates a new log filterer instance of IIssuance, bound to a specific deployed contract.
func NewIIssuanceFilterer(address common.Address, filterer bind.ContractFilterer) (*IIssuanceFilterer, error) {
	contract, err := bindIIssuance(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IIssuanceFilterer{contract: contract}, nil
}

// bindIIssuance binds a generic wrapper to an already deployed contract.
func bindIIssuance(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IIssuanceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IIssuance *IIssuanceRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IIssuance.Contract.IIssuanceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IIssuance *IIssuanceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IIssuance.Contract.IIssuanceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IIssuance *IIssuanceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IIssuance.Contract.IIssuanceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IIssuance *IIssuanceCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IIssuance.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IIssuance *IIssuanceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IIssuance.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IIssuance *IIssuanceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IIssuance.Contract.contract.Transact(opts, method, params...)
}

// Issu is a paid mutator transaction binding the contract method 0x13df3828.
//
// Solidity: function issu(uint64 _start, uint64 _end, uint64 _size, uint256 _sPrice) returns(uint256)
func (_IIssuance *IIssuanceTransactor) Issu(opts *bind.TransactOpts, _start uint64, _end uint64, _size uint64, _sPrice *big.Int) (*types.Transaction, error) {
	return _IIssuance.contract.Transact(opts, "issu", _start, _end, _size, _sPrice)
}

// Issu is a paid mutator transaction binding the contract method 0x13df3828.
//
// Solidity: function issu(uint64 _start, uint64 _end, uint64 _size, uint256 _sPrice) returns(uint256)
func (_IIssuance *IIssuanceSession) Issu(_start uint64, _end uint64, _size uint64, _sPrice *big.Int) (*types.Transaction, error) {
	return _IIssuance.Contract.Issu(&_IIssuance.TransactOpts, _start, _end, _size, _sPrice)
}

// Issu is a paid mutator transaction binding the contract method 0x13df3828.
//
// Solidity: function issu(uint64 _start, uint64 _end, uint64 _size, uint256 _sPrice) returns(uint256)
func (_IIssuance *IIssuanceTransactorSession) Issu(_start uint64, _end uint64, _size uint64, _sPrice *big.Int) (*types.Transaction, error) {
	return _IIssuance.Contract.Issu(&_IIssuance.TransactOpts, _start, _end, _size, _sPrice)
}

// IKmanageGetterABI is the input ABI used to generate the binding from.
const IKmanageGetterABI = "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_ki\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"}],\"name\":\"getK\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getKCnt\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getPf\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manageRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IKmanageGetterFuncSigs maps the 4-byte function signature to its string representation.
var IKmanageGetterFuncSigs = map[string]string{
	"fc3ba0ad": "balanceOf(uint64,uint8)",
	"dc0e7f45": "getK(uint64)",
	"39f2db96": "getKCnt()",
	"4f3c2eab": "getPf(uint8)",
	"6d23f6c8": "manageRate()",
}

// IKmanageGetter is an auto generated Go binding around an Ethereum contract.
type IKmanageGetter struct {
	IKmanageGetterCaller     // Read-only binding to the contract
	IKmanageGetterTransactor // Write-only binding to the contract
	IKmanageGetterFilterer   // Log filterer for contract events
}

// IKmanageGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IKmanageGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IKmanageGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IKmanageGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IKmanageGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IKmanageGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IKmanageGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IKmanageGetterSession struct {
	Contract     *IKmanageGetter   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IKmanageGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IKmanageGetterCallerSession struct {
	Contract *IKmanageGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// IKmanageGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IKmanageGetterTransactorSession struct {
	Contract     *IKmanageGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// IKmanageGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IKmanageGetterRaw struct {
	Contract *IKmanageGetter // Generic contract binding to access the raw methods on
}

// IKmanageGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IKmanageGetterCallerRaw struct {
	Contract *IKmanageGetterCaller // Generic read-only contract binding to access the raw methods on
}

// IKmanageGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IKmanageGetterTransactorRaw struct {
	Contract *IKmanageGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIKmanageGetter creates a new instance of IKmanageGetter, bound to a specific deployed contract.
func NewIKmanageGetter(address common.Address, backend bind.ContractBackend) (*IKmanageGetter, error) {
	contract, err := bindIKmanageGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IKmanageGetter{IKmanageGetterCaller: IKmanageGetterCaller{contract: contract}, IKmanageGetterTransactor: IKmanageGetterTransactor{contract: contract}, IKmanageGetterFilterer: IKmanageGetterFilterer{contract: contract}}, nil
}

// NewIKmanageGetterCaller creates a new read-only instance of IKmanageGetter, bound to a specific deployed contract.
func NewIKmanageGetterCaller(address common.Address, caller bind.ContractCaller) (*IKmanageGetterCaller, error) {
	contract, err := bindIKmanageGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IKmanageGetterCaller{contract: contract}, nil
}

// NewIKmanageGetterTransactor creates a new write-only instance of IKmanageGetter, bound to a specific deployed contract.
func NewIKmanageGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IKmanageGetterTransactor, error) {
	contract, err := bindIKmanageGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IKmanageGetterTransactor{contract: contract}, nil
}

// NewIKmanageGetterFilterer creates a new log filterer instance of IKmanageGetter, bound to a specific deployed contract.
func NewIKmanageGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IKmanageGetterFilterer, error) {
	contract, err := bindIKmanageGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IKmanageGetterFilterer{contract: contract}, nil
}

// bindIKmanageGetter binds a generic wrapper to an already deployed contract.
func bindIKmanageGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IKmanageGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IKmanageGetter *IKmanageGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IKmanageGetter.Contract.IKmanageGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IKmanageGetter *IKmanageGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IKmanageGetter.Contract.IKmanageGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IKmanageGetter *IKmanageGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IKmanageGetter.Contract.IKmanageGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IKmanageGetter *IKmanageGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IKmanageGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IKmanageGetter *IKmanageGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IKmanageGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IKmanageGetter *IKmanageGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IKmanageGetter.Contract.contract.Transact(opts, method, params...)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _ki, uint8 _ti) view returns(uint256, uint256)
func (_IKmanageGetter *IKmanageGetterCaller) BalanceOf(opts *bind.CallOpts, _ki uint64, _ti uint8) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _IKmanageGetter.contract.Call(opts, &out, "balanceOf", _ki, _ti)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _ki, uint8 _ti) view returns(uint256, uint256)
func (_IKmanageGetter *IKmanageGetterSession) BalanceOf(_ki uint64, _ti uint8) (*big.Int, *big.Int, error) {
	return _IKmanageGetter.Contract.BalanceOf(&_IKmanageGetter.CallOpts, _ki, _ti)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _ki, uint8 _ti) view returns(uint256, uint256)
func (_IKmanageGetter *IKmanageGetterCallerSession) BalanceOf(_ki uint64, _ti uint8) (*big.Int, *big.Int, error) {
	return _IKmanageGetter.Contract.BalanceOf(&_IKmanageGetter.CallOpts, _ki, _ti)
}

// GetK is a free data retrieval call binding the contract method 0xdc0e7f45.
//
// Solidity: function getK(uint64 _i) view returns(uint64)
func (_IKmanageGetter *IKmanageGetterCaller) GetK(opts *bind.CallOpts, _i uint64) (uint64, error) {
	var out []interface{}
	err := _IKmanageGetter.contract.Call(opts, &out, "getK", _i)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetK is a free data retrieval call binding the contract method 0xdc0e7f45.
//
// Solidity: function getK(uint64 _i) view returns(uint64)
func (_IKmanageGetter *IKmanageGetterSession) GetK(_i uint64) (uint64, error) {
	return _IKmanageGetter.Contract.GetK(&_IKmanageGetter.CallOpts, _i)
}

// GetK is a free data retrieval call binding the contract method 0xdc0e7f45.
//
// Solidity: function getK(uint64 _i) view returns(uint64)
func (_IKmanageGetter *IKmanageGetterCallerSession) GetK(_i uint64) (uint64, error) {
	return _IKmanageGetter.Contract.GetK(&_IKmanageGetter.CallOpts, _i)
}

// GetKCnt is a free data retrieval call binding the contract method 0x39f2db96.
//
// Solidity: function getKCnt() view returns(uint8)
func (_IKmanageGetter *IKmanageGetterCaller) GetKCnt(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _IKmanageGetter.contract.Call(opts, &out, "getKCnt")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetKCnt is a free data retrieval call binding the contract method 0x39f2db96.
//
// Solidity: function getKCnt() view returns(uint8)
func (_IKmanageGetter *IKmanageGetterSession) GetKCnt() (uint8, error) {
	return _IKmanageGetter.Contract.GetKCnt(&_IKmanageGetter.CallOpts)
}

// GetKCnt is a free data retrieval call binding the contract method 0x39f2db96.
//
// Solidity: function getKCnt() view returns(uint8)
func (_IKmanageGetter *IKmanageGetterCallerSession) GetKCnt() (uint8, error) {
	return _IKmanageGetter.Contract.GetKCnt(&_IKmanageGetter.CallOpts)
}

// GetPf is a free data retrieval call binding the contract method 0x4f3c2eab.
//
// Solidity: function getPf(uint8 _ti) view returns(uint64, uint256)
func (_IKmanageGetter *IKmanageGetterCaller) GetPf(opts *bind.CallOpts, _ti uint8) (uint64, *big.Int, error) {
	var out []interface{}
	err := _IKmanageGetter.contract.Call(opts, &out, "getPf", _ti)

	if err != nil {
		return *new(uint64), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetPf is a free data retrieval call binding the contract method 0x4f3c2eab.
//
// Solidity: function getPf(uint8 _ti) view returns(uint64, uint256)
func (_IKmanageGetter *IKmanageGetterSession) GetPf(_ti uint8) (uint64, *big.Int, error) {
	return _IKmanageGetter.Contract.GetPf(&_IKmanageGetter.CallOpts, _ti)
}

// GetPf is a free data retrieval call binding the contract method 0x4f3c2eab.
//
// Solidity: function getPf(uint8 _ti) view returns(uint64, uint256)
func (_IKmanageGetter *IKmanageGetterCallerSession) GetPf(_ti uint8) (uint64, *big.Int, error) {
	return _IKmanageGetter.Contract.GetPf(&_IKmanageGetter.CallOpts, _ti)
}

// ManageRate is a free data retrieval call binding the contract method 0x6d23f6c8.
//
// Solidity: function manageRate() view returns(uint8)
func (_IKmanageGetter *IKmanageGetterCaller) ManageRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _IKmanageGetter.contract.Call(opts, &out, "manageRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ManageRate is a free data retrieval call binding the contract method 0x6d23f6c8.
//
// Solidity: function manageRate() view returns(uint8)
func (_IKmanageGetter *IKmanageGetterSession) ManageRate() (uint8, error) {
	return _IKmanageGetter.Contract.ManageRate(&_IKmanageGetter.CallOpts)
}

// ManageRate is a free data retrieval call binding the contract method 0x6d23f6c8.
//
// Solidity: function manageRate() view returns(uint8)
func (_IKmanageGetter *IKmanageGetterCallerSession) ManageRate() (uint8, error) {
	return _IKmanageGetter.Contract.ManageRate(&_IKmanageGetter.CallOpts)
}

// IOwnerABI is the input ABI used to generate the binding from.
const IOwnerABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"}],\"name\":\"AddOwner\",\"type\":\"event\"}]"

// IOwner is an auto generated Go binding around an Ethereum contract.
type IOwner struct {
	IOwnerCaller     // Read-only binding to the contract
	IOwnerTransactor // Write-only binding to the contract
	IOwnerFilterer   // Log filterer for contract events
}

// IOwnerCaller is an auto generated read-only Go binding around an Ethereum contract.
type IOwnerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IOwnerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IOwnerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IOwnerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IOwnerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IOwnerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IOwnerSession struct {
	Contract     *IOwner           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IOwnerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IOwnerCallerSession struct {
	Contract *IOwnerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// IOwnerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IOwnerTransactorSession struct {
	Contract     *IOwnerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IOwnerRaw is an auto generated low-level Go binding around an Ethereum contract.
type IOwnerRaw struct {
	Contract *IOwner // Generic contract binding to access the raw methods on
}

// IOwnerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IOwnerCallerRaw struct {
	Contract *IOwnerCaller // Generic read-only contract binding to access the raw methods on
}

// IOwnerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IOwnerTransactorRaw struct {
	Contract *IOwnerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIOwner creates a new instance of IOwner, bound to a specific deployed contract.
func NewIOwner(address common.Address, backend bind.ContractBackend) (*IOwner, error) {
	contract, err := bindIOwner(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IOwner{IOwnerCaller: IOwnerCaller{contract: contract}, IOwnerTransactor: IOwnerTransactor{contract: contract}, IOwnerFilterer: IOwnerFilterer{contract: contract}}, nil
}

// NewIOwnerCaller creates a new read-only instance of IOwner, bound to a specific deployed contract.
func NewIOwnerCaller(address common.Address, caller bind.ContractCaller) (*IOwnerCaller, error) {
	contract, err := bindIOwner(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IOwnerCaller{contract: contract}, nil
}

// NewIOwnerTransactor creates a new write-only instance of IOwner, bound to a specific deployed contract.
func NewIOwnerTransactor(address common.Address, transactor bind.ContractTransactor) (*IOwnerTransactor, error) {
	contract, err := bindIOwner(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IOwnerTransactor{contract: contract}, nil
}

// NewIOwnerFilterer creates a new log filterer instance of IOwner, bound to a specific deployed contract.
func NewIOwnerFilterer(address common.Address, filterer bind.ContractFilterer) (*IOwnerFilterer, error) {
	contract, err := bindIOwner(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IOwnerFilterer{contract: contract}, nil
}

// bindIOwner binds a generic wrapper to an already deployed contract.
func bindIOwner(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IOwnerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IOwner *IOwnerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IOwner.Contract.IOwnerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IOwner *IOwnerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IOwner.Contract.IOwnerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IOwner *IOwnerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IOwner.Contract.IOwnerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IOwner *IOwnerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IOwner.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IOwner *IOwnerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IOwner.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IOwner *IOwnerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IOwner.Contract.contract.Transact(opts, method, params...)
}

// IOwnerAddOwnerIterator is returned from FilterAddOwner and is used to iterate over the raw logs and unpacked data for AddOwner events raised by the IOwner contract.
type IOwnerAddOwnerIterator struct {
	Event *IOwnerAddOwner // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IOwnerAddOwnerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IOwnerAddOwner)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IOwnerAddOwner)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IOwnerAddOwnerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IOwnerAddOwnerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IOwnerAddOwner represents a AddOwner event raised by the IOwner contract.
type IOwnerAddOwner struct {
	From  common.Address
	IsSet bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAddOwner is a free log retrieval operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_IOwner *IOwnerFilterer) FilterAddOwner(opts *bind.FilterOpts) (*IOwnerAddOwnerIterator, error) {

	logs, sub, err := _IOwner.contract.FilterLogs(opts, "AddOwner")
	if err != nil {
		return nil, err
	}
	return &IOwnerAddOwnerIterator{contract: _IOwner.contract, event: "AddOwner", logs: logs, sub: sub}, nil
}

// WatchAddOwner is a free log subscription operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_IOwner *IOwnerFilterer) WatchAddOwner(opts *bind.WatchOpts, sink chan<- *IOwnerAddOwner) (event.Subscription, error) {

	logs, sub, err := _IOwner.contract.WatchLogs(opts, "AddOwner")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IOwnerAddOwner)
				if err := _IOwner.contract.UnpackLog(event, "AddOwner", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddOwner is a log parse operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_IOwner *IOwnerFilterer) ParseAddOwner(log types.Log) (*IOwnerAddOwner, error) {
	event := new(IOwnerAddOwner)
	if err := _IOwner.contract.UnpackLog(event, "AddOwner", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// IPledgeABI is the input ABI used to generate the binding from.
const IPledgeABI = "[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"addT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"pledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lock\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IPledgeFuncSigs maps the 4-byte function signature to its string representation.
var IPledgeFuncSigs = map[string]string{
	"724a84a8": "addT(uint8)",
	"fc3ba0ad": "balanceOf(uint64,uint8)",
	"eb395fde": "getPledge(uint8)",
	"d23f7482": "pledge(uint64,uint256)",
	"c21a43e4": "totalPledge()",
	"5affa0f3": "withdraw(uint64,uint8,uint256,uint256)",
}

// IPledge is an auto generated Go binding around an Ethereum contract.
type IPledge struct {
	IPledgeCaller     // Read-only binding to the contract
	IPledgeTransactor // Write-only binding to the contract
	IPledgeFilterer   // Log filterer for contract events
}

// IPledgeCaller is an auto generated read-only Go binding around an Ethereum contract.
type IPledgeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IPledgeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IPledgeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IPledgeSession struct {
	Contract     *IPledge          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IPledgeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IPledgeCallerSession struct {
	Contract *IPledgeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// IPledgeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IPledgeTransactorSession struct {
	Contract     *IPledgeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// IPledgeRaw is an auto generated low-level Go binding around an Ethereum contract.
type IPledgeRaw struct {
	Contract *IPledge // Generic contract binding to access the raw methods on
}

// IPledgeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IPledgeCallerRaw struct {
	Contract *IPledgeCaller // Generic read-only contract binding to access the raw methods on
}

// IPledgeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IPledgeTransactorRaw struct {
	Contract *IPledgeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIPledge creates a new instance of IPledge, bound to a specific deployed contract.
func NewIPledge(address common.Address, backend bind.ContractBackend) (*IPledge, error) {
	contract, err := bindIPledge(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IPledge{IPledgeCaller: IPledgeCaller{contract: contract}, IPledgeTransactor: IPledgeTransactor{contract: contract}, IPledgeFilterer: IPledgeFilterer{contract: contract}}, nil
}

// NewIPledgeCaller creates a new read-only instance of IPledge, bound to a specific deployed contract.
func NewIPledgeCaller(address common.Address, caller bind.ContractCaller) (*IPledgeCaller, error) {
	contract, err := bindIPledge(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IPledgeCaller{contract: contract}, nil
}

// NewIPledgeTransactor creates a new write-only instance of IPledge, bound to a specific deployed contract.
func NewIPledgeTransactor(address common.Address, transactor bind.ContractTransactor) (*IPledgeTransactor, error) {
	contract, err := bindIPledge(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IPledgeTransactor{contract: contract}, nil
}

// NewIPledgeFilterer creates a new log filterer instance of IPledge, bound to a specific deployed contract.
func NewIPledgeFilterer(address common.Address, filterer bind.ContractFilterer) (*IPledgeFilterer, error) {
	contract, err := bindIPledge(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IPledgeFilterer{contract: contract}, nil
}

// bindIPledge binds a generic wrapper to an already deployed contract.
func bindIPledge(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IPledgeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPledge *IPledgeRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPledge.Contract.IPledgeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPledge *IPledgeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPledge.Contract.IPledgeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPledge *IPledgeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPledge.Contract.IPledgeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPledge *IPledgeCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPledge.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPledge *IPledgeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPledge.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPledge *IPledgeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPledge.Contract.contract.Transact(opts, method, params...)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256)
func (_IPledge *IPledgeCaller) BalanceOf(opts *bind.CallOpts, _i uint64, _ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _IPledge.contract.Call(opts, &out, "balanceOf", _i, _ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256)
func (_IPledge *IPledgeSession) BalanceOf(_i uint64, _ti uint8) (*big.Int, error) {
	return _IPledge.Contract.BalanceOf(&_IPledge.CallOpts, _i, _ti)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256)
func (_IPledge *IPledgeCallerSession) BalanceOf(_i uint64, _ti uint8) (*big.Int, error) {
	return _IPledge.Contract.BalanceOf(&_IPledge.CallOpts, _i, _ti)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 _ti) view returns(uint256)
func (_IPledge *IPledgeCaller) GetPledge(opts *bind.CallOpts, _ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _IPledge.contract.Call(opts, &out, "getPledge", _ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 _ti) view returns(uint256)
func (_IPledge *IPledgeSession) GetPledge(_ti uint8) (*big.Int, error) {
	return _IPledge.Contract.GetPledge(&_IPledge.CallOpts, _ti)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 _ti) view returns(uint256)
func (_IPledge *IPledgeCallerSession) GetPledge(_ti uint8) (*big.Int, error) {
	return _IPledge.Contract.GetPledge(&_IPledge.CallOpts, _ti)
}

// TotalPledge is a free data retrieval call binding the contract method 0xc21a43e4.
//
// Solidity: function totalPledge() view returns(uint256)
func (_IPledge *IPledgeCaller) TotalPledge(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _IPledge.contract.Call(opts, &out, "totalPledge")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalPledge is a free data retrieval call binding the contract method 0xc21a43e4.
//
// Solidity: function totalPledge() view returns(uint256)
func (_IPledge *IPledgeSession) TotalPledge() (*big.Int, error) {
	return _IPledge.Contract.TotalPledge(&_IPledge.CallOpts)
}

// TotalPledge is a free data retrieval call binding the contract method 0xc21a43e4.
//
// Solidity: function totalPledge() view returns(uint256)
func (_IPledge *IPledgeCallerSession) TotalPledge() (*big.Int, error) {
	return _IPledge.Contract.TotalPledge(&_IPledge.CallOpts)
}

// AddT is a paid mutator transaction binding the contract method 0x724a84a8.
//
// Solidity: function addT(uint8 _ti) returns()
func (_IPledge *IPledgeTransactor) AddT(opts *bind.TransactOpts, _ti uint8) (*types.Transaction, error) {
	return _IPledge.contract.Transact(opts, "addT", _ti)
}

// AddT is a paid mutator transaction binding the contract method 0x724a84a8.
//
// Solidity: function addT(uint8 _ti) returns()
func (_IPledge *IPledgeSession) AddT(_ti uint8) (*types.Transaction, error) {
	return _IPledge.Contract.AddT(&_IPledge.TransactOpts, _ti)
}

// AddT is a paid mutator transaction binding the contract method 0x724a84a8.
//
// Solidity: function addT(uint8 _ti) returns()
func (_IPledge *IPledgeTransactorSession) AddT(_ti uint8) (*types.Transaction, error) {
	return _IPledge.Contract.AddT(&_IPledge.TransactOpts, _ti)
}

// Pledge is a paid mutator transaction binding the contract method 0xd23f7482.
//
// Solidity: function pledge(uint64 _i, uint256 money) returns()
func (_IPledge *IPledgeTransactor) Pledge(opts *bind.TransactOpts, _i uint64, money *big.Int) (*types.Transaction, error) {
	return _IPledge.contract.Transact(opts, "pledge", _i, money)
}

// Pledge is a paid mutator transaction binding the contract method 0xd23f7482.
//
// Solidity: function pledge(uint64 _i, uint256 money) returns()
func (_IPledge *IPledgeSession) Pledge(_i uint64, money *big.Int) (*types.Transaction, error) {
	return _IPledge.Contract.Pledge(&_IPledge.TransactOpts, _i, money)
}

// Pledge is a paid mutator transaction binding the contract method 0xd23f7482.
//
// Solidity: function pledge(uint64 _i, uint256 money) returns()
func (_IPledge *IPledgeTransactorSession) Pledge(_i uint64, money *big.Int) (*types.Transaction, error) {
	return _IPledge.Contract.Pledge(&_IPledge.TransactOpts, _i, money)
}

// Withdraw is a paid mutator transaction binding the contract method 0x5affa0f3.
//
// Solidity: function withdraw(uint64 _i, uint8 _ti, uint256 money, uint256 lock) returns(uint256)
func (_IPledge *IPledgeTransactor) Withdraw(opts *bind.TransactOpts, _i uint64, _ti uint8, money *big.Int, lock *big.Int) (*types.Transaction, error) {
	return _IPledge.contract.Transact(opts, "withdraw", _i, _ti, money, lock)
}

// Withdraw is a paid mutator transaction binding the contract method 0x5affa0f3.
//
// Solidity: function withdraw(uint64 _i, uint8 _ti, uint256 money, uint256 lock) returns(uint256)
func (_IPledge *IPledgeSession) Withdraw(_i uint64, _ti uint8, money *big.Int, lock *big.Int) (*types.Transaction, error) {
	return _IPledge.Contract.Withdraw(&_IPledge.TransactOpts, _i, _ti, money, lock)
}

// Withdraw is a paid mutator transaction binding the contract method 0x5affa0f3.
//
// Solidity: function withdraw(uint64 _i, uint8 _ti, uint256 money, uint256 lock) returns(uint256)
func (_IPledge *IPledgeTransactorSession) Withdraw(_i uint64, _ti uint8, money *big.Int, lock *big.Int) (*types.Transaction, error) {
	return _IPledge.Contract.Withdraw(&_IPledge.TransactOpts, _i, _ti, money, lock)
}

// IPledgeGetterABI is the input ABI used to generate the binding from.
const IPledgeGetterABI = "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IPledgeGetterFuncSigs maps the 4-byte function signature to its string representation.
var IPledgeGetterFuncSigs = map[string]string{
	"fc3ba0ad": "balanceOf(uint64,uint8)",
	"eb395fde": "getPledge(uint8)",
	"c21a43e4": "totalPledge()",
}

// IPledgeGetter is an auto generated Go binding around an Ethereum contract.
type IPledgeGetter struct {
	IPledgeGetterCaller     // Read-only binding to the contract
	IPledgeGetterTransactor // Write-only binding to the contract
	IPledgeGetterFilterer   // Log filterer for contract events
}

// IPledgeGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IPledgeGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IPledgeGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IPledgeGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IPledgeGetterSession struct {
	Contract     *IPledgeGetter    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IPledgeGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IPledgeGetterCallerSession struct {
	Contract *IPledgeGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// IPledgeGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IPledgeGetterTransactorSession struct {
	Contract     *IPledgeGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// IPledgeGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IPledgeGetterRaw struct {
	Contract *IPledgeGetter // Generic contract binding to access the raw methods on
}

// IPledgeGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IPledgeGetterCallerRaw struct {
	Contract *IPledgeGetterCaller // Generic read-only contract binding to access the raw methods on
}

// IPledgeGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IPledgeGetterTransactorRaw struct {
	Contract *IPledgeGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIPledgeGetter creates a new instance of IPledgeGetter, bound to a specific deployed contract.
func NewIPledgeGetter(address common.Address, backend bind.ContractBackend) (*IPledgeGetter, error) {
	contract, err := bindIPledgeGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IPledgeGetter{IPledgeGetterCaller: IPledgeGetterCaller{contract: contract}, IPledgeGetterTransactor: IPledgeGetterTransactor{contract: contract}, IPledgeGetterFilterer: IPledgeGetterFilterer{contract: contract}}, nil
}

// NewIPledgeGetterCaller creates a new read-only instance of IPledgeGetter, bound to a specific deployed contract.
func NewIPledgeGetterCaller(address common.Address, caller bind.ContractCaller) (*IPledgeGetterCaller, error) {
	contract, err := bindIPledgeGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IPledgeGetterCaller{contract: contract}, nil
}

// NewIPledgeGetterTransactor creates a new write-only instance of IPledgeGetter, bound to a specific deployed contract.
func NewIPledgeGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IPledgeGetterTransactor, error) {
	contract, err := bindIPledgeGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IPledgeGetterTransactor{contract: contract}, nil
}

// NewIPledgeGetterFilterer creates a new log filterer instance of IPledgeGetter, bound to a specific deployed contract.
func NewIPledgeGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IPledgeGetterFilterer, error) {
	contract, err := bindIPledgeGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IPledgeGetterFilterer{contract: contract}, nil
}

// bindIPledgeGetter binds a generic wrapper to an already deployed contract.
func bindIPledgeGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IPledgeGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPledgeGetter *IPledgeGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPledgeGetter.Contract.IPledgeGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPledgeGetter *IPledgeGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPledgeGetter.Contract.IPledgeGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPledgeGetter *IPledgeGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPledgeGetter.Contract.IPledgeGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPledgeGetter *IPledgeGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPledgeGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPledgeGetter *IPledgeGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPledgeGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPledgeGetter *IPledgeGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPledgeGetter.Contract.contract.Transact(opts, method, params...)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256)
func (_IPledgeGetter *IPledgeGetterCaller) BalanceOf(opts *bind.CallOpts, _i uint64, _ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _IPledgeGetter.contract.Call(opts, &out, "balanceOf", _i, _ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256)
func (_IPledgeGetter *IPledgeGetterSession) BalanceOf(_i uint64, _ti uint8) (*big.Int, error) {
	return _IPledgeGetter.Contract.BalanceOf(&_IPledgeGetter.CallOpts, _i, _ti)
}

// BalanceOf is a free data retrieval call binding the contract method 0xfc3ba0ad.
//
// Solidity: function balanceOf(uint64 _i, uint8 _ti) view returns(uint256)
func (_IPledgeGetter *IPledgeGetterCallerSession) BalanceOf(_i uint64, _ti uint8) (*big.Int, error) {
	return _IPledgeGetter.Contract.BalanceOf(&_IPledgeGetter.CallOpts, _i, _ti)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 _ti) view returns(uint256)
func (_IPledgeGetter *IPledgeGetterCaller) GetPledge(opts *bind.CallOpts, _ti uint8) (*big.Int, error) {
	var out []interface{}
	err := _IPledgeGetter.contract.Call(opts, &out, "getPledge", _ti)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 _ti) view returns(uint256)
func (_IPledgeGetter *IPledgeGetterSession) GetPledge(_ti uint8) (*big.Int, error) {
	return _IPledgeGetter.Contract.GetPledge(&_IPledgeGetter.CallOpts, _ti)
}

// GetPledge is a free data retrieval call binding the contract method 0xeb395fde.
//
// Solidity: function getPledge(uint8 _ti) view returns(uint256)
func (_IPledgeGetter *IPledgeGetterCallerSession) GetPledge(_ti uint8) (*big.Int, error) {
	return _IPledgeGetter.Contract.GetPledge(&_IPledgeGetter.CallOpts, _ti)
}

// TotalPledge is a free data retrieval call binding the contract method 0xc21a43e4.
//
// Solidity: function totalPledge() view returns(uint256)
func (_IPledgeGetter *IPledgeGetterCaller) TotalPledge(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _IPledgeGetter.contract.Call(opts, &out, "totalPledge")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalPledge is a free data retrieval call binding the contract method 0xc21a43e4.
//
// Solidity: function totalPledge() view returns(uint256)
func (_IPledgeGetter *IPledgeGetterSession) TotalPledge() (*big.Int, error) {
	return _IPledgeGetter.Contract.TotalPledge(&_IPledgeGetter.CallOpts)
}

// TotalPledge is a free data retrieval call binding the contract method 0xc21a43e4.
//
// Solidity: function totalPledge() view returns(uint256)
func (_IPledgeGetter *IPledgeGetterCallerSession) TotalPledge() (*big.Int, error) {
	return _IPledgeGetter.Contract.TotalPledge(&_IPledgeGetter.CallOpts)
}

// IPledgeSetterABI is the input ABI used to generate the binding from.
const IPledgeSetterABI = "[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"addT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"pledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lock\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IPledgeSetterFuncSigs maps the 4-byte function signature to its string representation.
var IPledgeSetterFuncSigs = map[string]string{
	"724a84a8": "addT(uint8)",
	"d23f7482": "pledge(uint64,uint256)",
	"5affa0f3": "withdraw(uint64,uint8,uint256,uint256)",
}

// IPledgeSetter is an auto generated Go binding around an Ethereum contract.
type IPledgeSetter struct {
	IPledgeSetterCaller     // Read-only binding to the contract
	IPledgeSetterTransactor // Write-only binding to the contract
	IPledgeSetterFilterer   // Log filterer for contract events
}

// IPledgeSetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IPledgeSetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeSetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IPledgeSetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeSetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IPledgeSetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPledgeSetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IPledgeSetterSession struct {
	Contract     *IPledgeSetter    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IPledgeSetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IPledgeSetterCallerSession struct {
	Contract *IPledgeSetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// IPledgeSetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IPledgeSetterTransactorSession struct {
	Contract     *IPledgeSetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// IPledgeSetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IPledgeSetterRaw struct {
	Contract *IPledgeSetter // Generic contract binding to access the raw methods on
}

// IPledgeSetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IPledgeSetterCallerRaw struct {
	Contract *IPledgeSetterCaller // Generic read-only contract binding to access the raw methods on
}

// IPledgeSetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IPledgeSetterTransactorRaw struct {
	Contract *IPledgeSetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIPledgeSetter creates a new instance of IPledgeSetter, bound to a specific deployed contract.
func NewIPledgeSetter(address common.Address, backend bind.ContractBackend) (*IPledgeSetter, error) {
	contract, err := bindIPledgeSetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IPledgeSetter{IPledgeSetterCaller: IPledgeSetterCaller{contract: contract}, IPledgeSetterTransactor: IPledgeSetterTransactor{contract: contract}, IPledgeSetterFilterer: IPledgeSetterFilterer{contract: contract}}, nil
}

// NewIPledgeSetterCaller creates a new read-only instance of IPledgeSetter, bound to a specific deployed contract.
func NewIPledgeSetterCaller(address common.Address, caller bind.ContractCaller) (*IPledgeSetterCaller, error) {
	contract, err := bindIPledgeSetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IPledgeSetterCaller{contract: contract}, nil
}

// NewIPledgeSetterTransactor creates a new write-only instance of IPledgeSetter, bound to a specific deployed contract.
func NewIPledgeSetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IPledgeSetterTransactor, error) {
	contract, err := bindIPledgeSetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IPledgeSetterTransactor{contract: contract}, nil
}

// NewIPledgeSetterFilterer creates a new log filterer instance of IPledgeSetter, bound to a specific deployed contract.
func NewIPledgeSetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IPledgeSetterFilterer, error) {
	contract, err := bindIPledgeSetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IPledgeSetterFilterer{contract: contract}, nil
}

// bindIPledgeSetter binds a generic wrapper to an already deployed contract.
func bindIPledgeSetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IPledgeSetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPledgeSetter *IPledgeSetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPledgeSetter.Contract.IPledgeSetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPledgeSetter *IPledgeSetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.IPledgeSetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPledgeSetter *IPledgeSetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.IPledgeSetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPledgeSetter *IPledgeSetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPledgeSetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPledgeSetter *IPledgeSetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPledgeSetter *IPledgeSetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.contract.Transact(opts, method, params...)
}

// AddT is a paid mutator transaction binding the contract method 0x724a84a8.
//
// Solidity: function addT(uint8 _ti) returns()
func (_IPledgeSetter *IPledgeSetterTransactor) AddT(opts *bind.TransactOpts, _ti uint8) (*types.Transaction, error) {
	return _IPledgeSetter.contract.Transact(opts, "addT", _ti)
}

// AddT is a paid mutator transaction binding the contract method 0x724a84a8.
//
// Solidity: function addT(uint8 _ti) returns()
func (_IPledgeSetter *IPledgeSetterSession) AddT(_ti uint8) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.AddT(&_IPledgeSetter.TransactOpts, _ti)
}

// AddT is a paid mutator transaction binding the contract method 0x724a84a8.
//
// Solidity: function addT(uint8 _ti) returns()
func (_IPledgeSetter *IPledgeSetterTransactorSession) AddT(_ti uint8) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.AddT(&_IPledgeSetter.TransactOpts, _ti)
}

// Pledge is a paid mutator transaction binding the contract method 0xd23f7482.
//
// Solidity: function pledge(uint64 _i, uint256 money) returns()
func (_IPledgeSetter *IPledgeSetterTransactor) Pledge(opts *bind.TransactOpts, _i uint64, money *big.Int) (*types.Transaction, error) {
	return _IPledgeSetter.contract.Transact(opts, "pledge", _i, money)
}

// Pledge is a paid mutator transaction binding the contract method 0xd23f7482.
//
// Solidity: function pledge(uint64 _i, uint256 money) returns()
func (_IPledgeSetter *IPledgeSetterSession) Pledge(_i uint64, money *big.Int) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.Pledge(&_IPledgeSetter.TransactOpts, _i, money)
}

// Pledge is a paid mutator transaction binding the contract method 0xd23f7482.
//
// Solidity: function pledge(uint64 _i, uint256 money) returns()
func (_IPledgeSetter *IPledgeSetterTransactorSession) Pledge(_i uint64, money *big.Int) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.Pledge(&_IPledgeSetter.TransactOpts, _i, money)
}

// Withdraw is a paid mutator transaction binding the contract method 0x5affa0f3.
//
// Solidity: function withdraw(uint64 _i, uint8 _ti, uint256 money, uint256 lock) returns(uint256)
func (_IPledgeSetter *IPledgeSetterTransactor) Withdraw(opts *bind.TransactOpts, _i uint64, _ti uint8, money *big.Int, lock *big.Int) (*types.Transaction, error) {
	return _IPledgeSetter.contract.Transact(opts, "withdraw", _i, _ti, money, lock)
}

// Withdraw is a paid mutator transaction binding the contract method 0x5affa0f3.
//
// Solidity: function withdraw(uint64 _i, uint8 _ti, uint256 money, uint256 lock) returns(uint256)
func (_IPledgeSetter *IPledgeSetterSession) Withdraw(_i uint64, _ti uint8, money *big.Int, lock *big.Int) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.Withdraw(&_IPledgeSetter.TransactOpts, _i, _ti, money, lock)
}

// Withdraw is a paid mutator transaction binding the contract method 0x5affa0f3.
//
// Solidity: function withdraw(uint64 _i, uint8 _ti, uint256 money, uint256 lock) returns(uint256)
func (_IPledgeSetter *IPledgeSetterTransactorSession) Withdraw(_i uint64, _ti uint8, money *big.Int, lock *big.Int) (*types.Transaction, error) {
	return _IPledgeSetter.Contract.Withdraw(&_IPledgeSetter.TransactOpts, _i, _ti, money, lock)
}

// IPoolABI is the input ABI used to generate the binding from.
const IPoolABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"Inflow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"Outflow\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"inflow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"outflow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]"

// IPoolFuncSigs maps the 4-byte function signature to its string representation.
var IPoolFuncSigs = map[string]string{
	"368007fe": "inflow(address,address,uint256)",
	"530345bb": "outflow(address,address,uint256)",
}

// IPool is an auto generated Go binding around an Ethereum contract.
type IPool struct {
	IPoolCaller     // Read-only binding to the contract
	IPoolTransactor // Write-only binding to the contract
	IPoolFilterer   // Log filterer for contract events
}

// IPoolCaller is an auto generated read-only Go binding around an Ethereum contract.
type IPoolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPoolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IPoolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPoolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IPoolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IPoolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IPoolSession struct {
	Contract     *IPool            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IPoolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IPoolCallerSession struct {
	Contract *IPoolCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// IPoolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IPoolTransactorSession struct {
	Contract     *IPoolTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IPoolRaw is an auto generated low-level Go binding around an Ethereum contract.
type IPoolRaw struct {
	Contract *IPool // Generic contract binding to access the raw methods on
}

// IPoolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IPoolCallerRaw struct {
	Contract *IPoolCaller // Generic read-only contract binding to access the raw methods on
}

// IPoolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IPoolTransactorRaw struct {
	Contract *IPoolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIPool creates a new instance of IPool, bound to a specific deployed contract.
func NewIPool(address common.Address, backend bind.ContractBackend) (*IPool, error) {
	contract, err := bindIPool(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IPool{IPoolCaller: IPoolCaller{contract: contract}, IPoolTransactor: IPoolTransactor{contract: contract}, IPoolFilterer: IPoolFilterer{contract: contract}}, nil
}

// NewIPoolCaller creates a new read-only instance of IPool, bound to a specific deployed contract.
func NewIPoolCaller(address common.Address, caller bind.ContractCaller) (*IPoolCaller, error) {
	contract, err := bindIPool(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IPoolCaller{contract: contract}, nil
}

// NewIPoolTransactor creates a new write-only instance of IPool, bound to a specific deployed contract.
func NewIPoolTransactor(address common.Address, transactor bind.ContractTransactor) (*IPoolTransactor, error) {
	contract, err := bindIPool(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IPoolTransactor{contract: contract}, nil
}

// NewIPoolFilterer creates a new log filterer instance of IPool, bound to a specific deployed contract.
func NewIPoolFilterer(address common.Address, filterer bind.ContractFilterer) (*IPoolFilterer, error) {
	contract, err := bindIPool(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IPoolFilterer{contract: contract}, nil
}

// bindIPool binds a generic wrapper to an already deployed contract.
func bindIPool(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IPoolABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPool *IPoolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPool.Contract.IPoolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPool *IPoolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPool.Contract.IPoolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPool *IPoolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPool.Contract.IPoolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IPool *IPoolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IPool.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IPool *IPoolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IPool.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IPool *IPoolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IPool.Contract.contract.Transact(opts, method, params...)
}

// Inflow is a paid mutator transaction binding the contract method 0x368007fe.
//
// Solidity: function inflow(address tAddr, address from, uint256 money) payable returns()
func (_IPool *IPoolTransactor) Inflow(opts *bind.TransactOpts, tAddr common.Address, from common.Address, money *big.Int) (*types.Transaction, error) {
	return _IPool.contract.Transact(opts, "inflow", tAddr, from, money)
}

// Inflow is a paid mutator transaction binding the contract method 0x368007fe.
//
// Solidity: function inflow(address tAddr, address from, uint256 money) payable returns()
func (_IPool *IPoolSession) Inflow(tAddr common.Address, from common.Address, money *big.Int) (*types.Transaction, error) {
	return _IPool.Contract.Inflow(&_IPool.TransactOpts, tAddr, from, money)
}

// Inflow is a paid mutator transaction binding the contract method 0x368007fe.
//
// Solidity: function inflow(address tAddr, address from, uint256 money) payable returns()
func (_IPool *IPoolTransactorSession) Inflow(tAddr common.Address, from common.Address, money *big.Int) (*types.Transaction, error) {
	return _IPool.Contract.Inflow(&_IPool.TransactOpts, tAddr, from, money)
}

// Outflow is a paid mutator transaction binding the contract method 0x530345bb.
//
// Solidity: function outflow(address tAddr, address to, uint256 money) payable returns()
func (_IPool *IPoolTransactor) Outflow(opts *bind.TransactOpts, tAddr common.Address, to common.Address, money *big.Int) (*types.Transaction, error) {
	return _IPool.contract.Transact(opts, "outflow", tAddr, to, money)
}

// Outflow is a paid mutator transaction binding the contract method 0x530345bb.
//
// Solidity: function outflow(address tAddr, address to, uint256 money) payable returns()
func (_IPool *IPoolSession) Outflow(tAddr common.Address, to common.Address, money *big.Int) (*types.Transaction, error) {
	return _IPool.Contract.Outflow(&_IPool.TransactOpts, tAddr, to, money)
}

// Outflow is a paid mutator transaction binding the contract method 0x530345bb.
//
// Solidity: function outflow(address tAddr, address to, uint256 money) payable returns()
func (_IPool *IPoolTransactorSession) Outflow(tAddr common.Address, to common.Address, money *big.Int) (*types.Transaction, error) {
	return _IPool.Contract.Outflow(&_IPool.TransactOpts, tAddr, to, money)
}

// IPoolInflowIterator is returned from FilterInflow and is used to iterate over the raw logs and unpacked data for Inflow events raised by the IPool contract.
type IPoolInflowIterator struct {
	Event *IPoolInflow // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IPoolInflowIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IPoolInflow)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IPoolInflow)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IPoolInflowIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IPoolInflowIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IPoolInflow represents a Inflow event raised by the IPool contract.
type IPoolInflow struct {
	From  common.Address
	TAddr common.Address
	Money *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterInflow is a free log retrieval operation binding the contract event 0xde52ea03a3979fafeaf8ea9d7fe6b3ddc6a95e9e8c0922562db3a047c0d72578.
//
// Solidity: event Inflow(address indexed from, address tAddr, uint256 money)
func (_IPool *IPoolFilterer) FilterInflow(opts *bind.FilterOpts, from []common.Address) (*IPoolInflowIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _IPool.contract.FilterLogs(opts, "Inflow", fromRule)
	if err != nil {
		return nil, err
	}
	return &IPoolInflowIterator{contract: _IPool.contract, event: "Inflow", logs: logs, sub: sub}, nil
}

// WatchInflow is a free log subscription operation binding the contract event 0xde52ea03a3979fafeaf8ea9d7fe6b3ddc6a95e9e8c0922562db3a047c0d72578.
//
// Solidity: event Inflow(address indexed from, address tAddr, uint256 money)
func (_IPool *IPoolFilterer) WatchInflow(opts *bind.WatchOpts, sink chan<- *IPoolInflow, from []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _IPool.contract.WatchLogs(opts, "Inflow", fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IPoolInflow)
				if err := _IPool.contract.UnpackLog(event, "Inflow", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInflow is a log parse operation binding the contract event 0xde52ea03a3979fafeaf8ea9d7fe6b3ddc6a95e9e8c0922562db3a047c0d72578.
//
// Solidity: event Inflow(address indexed from, address tAddr, uint256 money)
func (_IPool *IPoolFilterer) ParseInflow(log types.Log) (*IPoolInflow, error) {
	event := new(IPoolInflow)
	if err := _IPool.contract.UnpackLog(event, "Inflow", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// IPoolOutflowIterator is returned from FilterOutflow and is used to iterate over the raw logs and unpacked data for Outflow events raised by the IPool contract.
type IPoolOutflowIterator struct {
	Event *IPoolOutflow // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IPoolOutflowIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IPoolOutflow)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IPoolOutflow)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IPoolOutflowIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IPoolOutflowIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IPoolOutflow represents a Outflow event raised by the IPool contract.
type IPoolOutflow struct {
	To    common.Address
	TAddr common.Address
	Money *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterOutflow is a free log retrieval operation binding the contract event 0x4eb2adb2eba0bb5546cc2e8d62ae0c32e7b6fb40567d53be433eb4b17f5f996e.
//
// Solidity: event Outflow(address indexed to, address tAddr, uint256 money)
func (_IPool *IPoolFilterer) FilterOutflow(opts *bind.FilterOpts, to []common.Address) (*IPoolOutflowIterator, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _IPool.contract.FilterLogs(opts, "Outflow", toRule)
	if err != nil {
		return nil, err
	}
	return &IPoolOutflowIterator{contract: _IPool.contract, event: "Outflow", logs: logs, sub: sub}, nil
}

// WatchOutflow is a free log subscription operation binding the contract event 0x4eb2adb2eba0bb5546cc2e8d62ae0c32e7b6fb40567d53be433eb4b17f5f996e.
//
// Solidity: event Outflow(address indexed to, address tAddr, uint256 money)
func (_IPool *IPoolFilterer) WatchOutflow(opts *bind.WatchOpts, sink chan<- *IPoolOutflow, to []common.Address) (event.Subscription, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _IPool.contract.WatchLogs(opts, "Outflow", toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IPoolOutflow)
				if err := _IPool.contract.UnpackLog(event, "Outflow", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOutflow is a log parse operation binding the contract event 0x4eb2adb2eba0bb5546cc2e8d62ae0c32e7b6fb40567d53be433eb4b17f5f996e.
//
// Solidity: event Outflow(address indexed to, address tAddr, uint256 money)
func (_IPool *IPoolFilterer) ParseOutflow(log types.Log) (*IPoolOutflow, error) {
	event := new(IPoolOutflow)
	if err := _IPool.contract.UnpackLog(event, "Outflow", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// IRoleGetterABI is the input ABI used to generate the binding from.
const IRoleGetterABI = "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_rType\",\"type\":\"uint8\"}],\"name\":\"checkIG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACnt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"getAcc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_i\",\"type\":\"uint64\"}],\"name\":\"getAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"getRInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isBan\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"rType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gIndex\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extra\",\"type\":\"bytes\"}],\"internalType\":\"structRoleOut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IRoleGetterFuncSigs maps the 4-byte function signature to its string representation.
var IRoleGetterFuncSigs = map[string]string{
	"7738515f": "checkIG(uint64,uint8)",
	"7264a551": "getACnt()",
	"caca4a06": "getAcc(address)",
	"9332aa6e": "getAddr(uint64)",
	"441abace": "getRInfo(address)",
}

// IRoleGetter is an auto generated Go binding around an Ethereum contract.
type IRoleGetter struct {
	IRoleGetterCaller     // Read-only binding to the contract
	IRoleGetterTransactor // Write-only binding to the contract
	IRoleGetterFilterer   // Log filterer for contract events
}

// IRoleGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type IRoleGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IRoleGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IRoleGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IRoleGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IRoleGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IRoleGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IRoleGetterSession struct {
	Contract     *IRoleGetter      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IRoleGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IRoleGetterCallerSession struct {
	Contract *IRoleGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// IRoleGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IRoleGetterTransactorSession struct {
	Contract     *IRoleGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// IRoleGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type IRoleGetterRaw struct {
	Contract *IRoleGetter // Generic contract binding to access the raw methods on
}

// IRoleGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IRoleGetterCallerRaw struct {
	Contract *IRoleGetterCaller // Generic read-only contract binding to access the raw methods on
}

// IRoleGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IRoleGetterTransactorRaw struct {
	Contract *IRoleGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIRoleGetter creates a new instance of IRoleGetter, bound to a specific deployed contract.
func NewIRoleGetter(address common.Address, backend bind.ContractBackend) (*IRoleGetter, error) {
	contract, err := bindIRoleGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IRoleGetter{IRoleGetterCaller: IRoleGetterCaller{contract: contract}, IRoleGetterTransactor: IRoleGetterTransactor{contract: contract}, IRoleGetterFilterer: IRoleGetterFilterer{contract: contract}}, nil
}

// NewIRoleGetterCaller creates a new read-only instance of IRoleGetter, bound to a specific deployed contract.
func NewIRoleGetterCaller(address common.Address, caller bind.ContractCaller) (*IRoleGetterCaller, error) {
	contract, err := bindIRoleGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IRoleGetterCaller{contract: contract}, nil
}

// NewIRoleGetterTransactor creates a new write-only instance of IRoleGetter, bound to a specific deployed contract.
func NewIRoleGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*IRoleGetterTransactor, error) {
	contract, err := bindIRoleGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IRoleGetterTransactor{contract: contract}, nil
}

// NewIRoleGetterFilterer creates a new log filterer instance of IRoleGetter, bound to a specific deployed contract.
func NewIRoleGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*IRoleGetterFilterer, error) {
	contract, err := bindIRoleGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IRoleGetterFilterer{contract: contract}, nil
}

// bindIRoleGetter binds a generic wrapper to an already deployed contract.
func bindIRoleGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IRoleGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IRoleGetter *IRoleGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IRoleGetter.Contract.IRoleGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IRoleGetter *IRoleGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IRoleGetter.Contract.IRoleGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IRoleGetter *IRoleGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IRoleGetter.Contract.IRoleGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IRoleGetter *IRoleGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IRoleGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IRoleGetter *IRoleGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IRoleGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IRoleGetter *IRoleGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IRoleGetter.Contract.contract.Transact(opts, method, params...)
}

// CheckIG is a free data retrieval call binding the contract method 0x7738515f.
//
// Solidity: function checkIG(uint64 _i, uint8 _rType) view returns(address, address, uint64, uint8)
func (_IRoleGetter *IRoleGetterCaller) CheckIG(opts *bind.CallOpts, _i uint64, _rType uint8) (common.Address, common.Address, uint64, uint8, error) {
	var out []interface{}
	err := _IRoleGetter.contract.Call(opts, &out, "checkIG", _i, _rType)

	if err != nil {
		return *new(common.Address), *new(common.Address), *new(uint64), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	out1 := *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	out2 := *abi.ConvertType(out[2], new(uint64)).(*uint64)
	out3 := *abi.ConvertType(out[3], new(uint8)).(*uint8)

	return out0, out1, out2, out3, err

}

// CheckIG is a free data retrieval call binding the contract method 0x7738515f.
//
// Solidity: function checkIG(uint64 _i, uint8 _rType) view returns(address, address, uint64, uint8)
func (_IRoleGetter *IRoleGetterSession) CheckIG(_i uint64, _rType uint8) (common.Address, common.Address, uint64, uint8, error) {
	return _IRoleGetter.Contract.CheckIG(&_IRoleGetter.CallOpts, _i, _rType)
}

// CheckIG is a free data retrieval call binding the contract method 0x7738515f.
//
// Solidity: function checkIG(uint64 _i, uint8 _rType) view returns(address, address, uint64, uint8)
func (_IRoleGetter *IRoleGetterCallerSession) CheckIG(_i uint64, _rType uint8) (common.Address, common.Address, uint64, uint8, error) {
	return _IRoleGetter.Contract.CheckIG(&_IRoleGetter.CallOpts, _i, _rType)
}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_IRoleGetter *IRoleGetterCaller) GetACnt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _IRoleGetter.contract.Call(opts, &out, "getACnt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_IRoleGetter *IRoleGetterSession) GetACnt() (uint64, error) {
	return _IRoleGetter.Contract.GetACnt(&_IRoleGetter.CallOpts)
}

// GetACnt is a free data retrieval call binding the contract method 0x7264a551.
//
// Solidity: function getACnt() view returns(uint64)
func (_IRoleGetter *IRoleGetterCallerSession) GetACnt() (uint64, error) {
	return _IRoleGetter.Contract.GetACnt(&_IRoleGetter.CallOpts)
}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address _a) view returns(uint64)
func (_IRoleGetter *IRoleGetterCaller) GetAcc(opts *bind.CallOpts, _a common.Address) (uint64, error) {
	var out []interface{}
	err := _IRoleGetter.contract.Call(opts, &out, "getAcc", _a)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address _a) view returns(uint64)
func (_IRoleGetter *IRoleGetterSession) GetAcc(_a common.Address) (uint64, error) {
	return _IRoleGetter.Contract.GetAcc(&_IRoleGetter.CallOpts, _a)
}

// GetAcc is a free data retrieval call binding the contract method 0xcaca4a06.
//
// Solidity: function getAcc(address _a) view returns(uint64)
func (_IRoleGetter *IRoleGetterCallerSession) GetAcc(_a common.Address) (uint64, error) {
	return _IRoleGetter.Contract.GetAcc(&_IRoleGetter.CallOpts, _a)
}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 _i) view returns(address)
func (_IRoleGetter *IRoleGetterCaller) GetAddr(opts *bind.CallOpts, _i uint64) (common.Address, error) {
	var out []interface{}
	err := _IRoleGetter.contract.Call(opts, &out, "getAddr", _i)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 _i) view returns(address)
func (_IRoleGetter *IRoleGetterSession) GetAddr(_i uint64) (common.Address, error) {
	return _IRoleGetter.Contract.GetAddr(&_IRoleGetter.CallOpts, _i)
}

// GetAddr is a free data retrieval call binding the contract method 0x9332aa6e.
//
// Solidity: function getAddr(uint64 _i) view returns(address)
func (_IRoleGetter *IRoleGetterCallerSession) GetAddr(_i uint64) (common.Address, error) {
	return _IRoleGetter.Contract.GetAddr(&_IRoleGetter.CallOpts, _i)
}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address _a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_IRoleGetter *IRoleGetterCaller) GetRInfo(opts *bind.CallOpts, _a common.Address) (RoleOut, error) {
	var out []interface{}
	err := _IRoleGetter.contract.Call(opts, &out, "getRInfo", _a)

	if err != nil {
		return *new(RoleOut), err
	}

	out0 := *abi.ConvertType(out[0], new(RoleOut)).(*RoleOut)

	return out0, err

}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address _a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_IRoleGetter *IRoleGetterSession) GetRInfo(_a common.Address) (RoleOut, error) {
	return _IRoleGetter.Contract.GetRInfo(&_IRoleGetter.CallOpts, _a)
}

// GetRInfo is a free data retrieval call binding the contract method 0x441abace.
//
// Solidity: function getRInfo(address _a) view returns((bool,bool,uint8,uint64,uint64,address,address,bytes))
func (_IRoleGetter *IRoleGetterCallerSession) GetRInfo(_a common.Address) (RoleOut, error) {
	return _IRoleGetter.Contract.GetRInfo(&_IRoleGetter.CallOpts, _a)
}

// ITokenGetterABI is the input ABI used to generate the binding from.
const ITokenGetterABI = "[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"checkT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_ti\",\"type\":\"uint8\"}],\"name\":\"getTA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTCnt\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_t\",\"type\":\"address\"}],\"name\":\"getTI\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ITokenGetterFuncSigs maps the 4-byte function signature to its string representation.
var ITokenGetterFuncSigs = map[string]string{
	"81abb8fe": "checkT(uint8)",
	"8bb4a637": "getTA(uint8)",
	"7600b86a": "getTCnt()",
	"2df2685f": "getTI(address)",
}

// ITokenGetter is an auto generated Go binding around an Ethereum contract.
type ITokenGetter struct {
	ITokenGetterCaller     // Read-only binding to the contract
	ITokenGetterTransactor // Write-only binding to the contract
	ITokenGetterFilterer   // Log filterer for contract events
}

// ITokenGetterCaller is an auto generated read-only Go binding around an Ethereum contract.
type ITokenGetterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ITokenGetterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ITokenGetterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ITokenGetterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ITokenGetterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ITokenGetterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ITokenGetterSession struct {
	Contract     *ITokenGetter     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ITokenGetterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ITokenGetterCallerSession struct {
	Contract *ITokenGetterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// ITokenGetterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ITokenGetterTransactorSession struct {
	Contract     *ITokenGetterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// ITokenGetterRaw is an auto generated low-level Go binding around an Ethereum contract.
type ITokenGetterRaw struct {
	Contract *ITokenGetter // Generic contract binding to access the raw methods on
}

// ITokenGetterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ITokenGetterCallerRaw struct {
	Contract *ITokenGetterCaller // Generic read-only contract binding to access the raw methods on
}

// ITokenGetterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ITokenGetterTransactorRaw struct {
	Contract *ITokenGetterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewITokenGetter creates a new instance of ITokenGetter, bound to a specific deployed contract.
func NewITokenGetter(address common.Address, backend bind.ContractBackend) (*ITokenGetter, error) {
	contract, err := bindITokenGetter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ITokenGetter{ITokenGetterCaller: ITokenGetterCaller{contract: contract}, ITokenGetterTransactor: ITokenGetterTransactor{contract: contract}, ITokenGetterFilterer: ITokenGetterFilterer{contract: contract}}, nil
}

// NewITokenGetterCaller creates a new read-only instance of ITokenGetter, bound to a specific deployed contract.
func NewITokenGetterCaller(address common.Address, caller bind.ContractCaller) (*ITokenGetterCaller, error) {
	contract, err := bindITokenGetter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ITokenGetterCaller{contract: contract}, nil
}

// NewITokenGetterTransactor creates a new write-only instance of ITokenGetter, bound to a specific deployed contract.
func NewITokenGetterTransactor(address common.Address, transactor bind.ContractTransactor) (*ITokenGetterTransactor, error) {
	contract, err := bindITokenGetter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ITokenGetterTransactor{contract: contract}, nil
}

// NewITokenGetterFilterer creates a new log filterer instance of ITokenGetter, bound to a specific deployed contract.
func NewITokenGetterFilterer(address common.Address, filterer bind.ContractFilterer) (*ITokenGetterFilterer, error) {
	contract, err := bindITokenGetter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ITokenGetterFilterer{contract: contract}, nil
}

// bindITokenGetter binds a generic wrapper to an already deployed contract.
func bindITokenGetter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ITokenGetterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ITokenGetter *ITokenGetterRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ITokenGetter.Contract.ITokenGetterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ITokenGetter *ITokenGetterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ITokenGetter.Contract.ITokenGetterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ITokenGetter *ITokenGetterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ITokenGetter.Contract.ITokenGetterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ITokenGetter *ITokenGetterCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ITokenGetter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ITokenGetter *ITokenGetterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ITokenGetter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ITokenGetter *ITokenGetterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ITokenGetter.Contract.contract.Transact(opts, method, params...)
}

// CheckT is a free data retrieval call binding the contract method 0x81abb8fe.
//
// Solidity: function checkT(uint8 _ti) view returns(address, bool)
func (_ITokenGetter *ITokenGetterCaller) CheckT(opts *bind.CallOpts, _ti uint8) (common.Address, bool, error) {
	var out []interface{}
	err := _ITokenGetter.contract.Call(opts, &out, "checkT", _ti)

	if err != nil {
		return *new(common.Address), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// CheckT is a free data retrieval call binding the contract method 0x81abb8fe.
//
// Solidity: function checkT(uint8 _ti) view returns(address, bool)
func (_ITokenGetter *ITokenGetterSession) CheckT(_ti uint8) (common.Address, bool, error) {
	return _ITokenGetter.Contract.CheckT(&_ITokenGetter.CallOpts, _ti)
}

// CheckT is a free data retrieval call binding the contract method 0x81abb8fe.
//
// Solidity: function checkT(uint8 _ti) view returns(address, bool)
func (_ITokenGetter *ITokenGetterCallerSession) CheckT(_ti uint8) (common.Address, bool, error) {
	return _ITokenGetter.Contract.CheckT(&_ITokenGetter.CallOpts, _ti)
}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 _ti) view returns(address)
func (_ITokenGetter *ITokenGetterCaller) GetTA(opts *bind.CallOpts, _ti uint8) (common.Address, error) {
	var out []interface{}
	err := _ITokenGetter.contract.Call(opts, &out, "getTA", _ti)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 _ti) view returns(address)
func (_ITokenGetter *ITokenGetterSession) GetTA(_ti uint8) (common.Address, error) {
	return _ITokenGetter.Contract.GetTA(&_ITokenGetter.CallOpts, _ti)
}

// GetTA is a free data retrieval call binding the contract method 0x8bb4a637.
//
// Solidity: function getTA(uint8 _ti) view returns(address)
func (_ITokenGetter *ITokenGetterCallerSession) GetTA(_ti uint8) (common.Address, error) {
	return _ITokenGetter.Contract.GetTA(&_ITokenGetter.CallOpts, _ti)
}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_ITokenGetter *ITokenGetterCaller) GetTCnt(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ITokenGetter.contract.Call(opts, &out, "getTCnt")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_ITokenGetter *ITokenGetterSession) GetTCnt() (uint8, error) {
	return _ITokenGetter.Contract.GetTCnt(&_ITokenGetter.CallOpts)
}

// GetTCnt is a free data retrieval call binding the contract method 0x7600b86a.
//
// Solidity: function getTCnt() view returns(uint8)
func (_ITokenGetter *ITokenGetterCallerSession) GetTCnt() (uint8, error) {
	return _ITokenGetter.Contract.GetTCnt(&_ITokenGetter.CallOpts)
}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address _t) view returns(uint8, bool, bool)
func (_ITokenGetter *ITokenGetterCaller) GetTI(opts *bind.CallOpts, _t common.Address) (uint8, bool, bool, error) {
	var out []interface{}
	err := _ITokenGetter.contract.Call(opts, &out, "getTI", _t)

	if err != nil {
		return *new(uint8), *new(bool), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)

	return out0, out1, out2, err

}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address _t) view returns(uint8, bool, bool)
func (_ITokenGetter *ITokenGetterSession) GetTI(_t common.Address) (uint8, bool, bool, error) {
	return _ITokenGetter.Contract.GetTI(&_ITokenGetter.CallOpts, _t)
}

// GetTI is a free data retrieval call binding the contract method 0x2df2685f.
//
// Solidity: function getTI(address _t) view returns(uint8, bool, bool)
func (_ITokenGetter *ITokenGetterCallerSession) GetTI(_t common.Address) (uint8, bool, bool, error) {
	return _ITokenGetter.Contract.GetTI(&_ITokenGetter.CallOpts, _t)
}

// OwnerABI is the input ABI used to generate the binding from.
const OwnerABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"}],\"name\":\"AddOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"},{\"internalType\":\"bytes[5]\",\"name\":\"signs\",\"type\":\"bytes[5]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// OwnerFuncSigs maps the 4-byte function signature to its string representation.
var OwnerFuncSigs = map[string]string{
	"4bf1b134": "add(address,bool,bytes[5])",
	"de9375f2": "auth()",
	"022914a7": "owners(address)",
}

// OwnerBin is the compiled bytecode used for deploying new contracts.
var OwnerBin = "0x608060405234801561001057600080fd5b5060405161055838038061055883398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6104c5806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063022914a7146100465780634bf1b1341461007e578063de9375f214610093575b600080fd5b610069610054366004610257565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61009161008c3660046102e9565b6100be565b005b6001546100a6906001600160a01b031681565b6040516001600160a01b039091168152602001610075565b823b600081900361010a5760405162461bcd60e51b81526020600482015260126024820152713732b2b21031b7b73a3930b1ba1030b2323960711b604482015260640160405180910390fd5b6040516bffffffffffffffffffffffff1930606090811b821660208401526218591960ea1b603484015286901b16603782015283151560f81b604b820152600090604c0160408051601f1981840301815290829052805160209091012060015463a96bba9d60e01b83529092506001600160a01b03169063a96bba9d9061019790849087906004016103ff565b600060405180830381600087803b1580156101b157600080fd5b505af11580156101c5573d6000803e3d6000fd5b5050604080516001600160a01b038916815287151560208201527f938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807935001905060405180910390a15050506001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b80356001600160a01b038116811461025257600080fd5b919050565b60006020828403121561026957600080fd5b6102728261023b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156102b2576102b2610279565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102e1576102e1610279565b604052919050565b6000806000606084860312156102fe57600080fd5b6103078461023b565b9250602080850135801515811461031d57600080fd5b9250604085013567ffffffffffffffff8082111561033a57600080fd5b8187019150601f888184011261034f57600080fd5b61035761028f565b8060a085018b81111561036957600080fd5b855b818110156103ed578035868111156103835760008081fd5b87018581018e136103945760008081fd5b8035878111156103a6576103a6610279565b6103b7818801601f19168b016102b8565b8181528f8b8385010111156103cc5760008081fd5b818b84018c83013760009181018b019190915285525092870192870161036b565b50508096505050505050509250925092565b8281526040602080830182905260009160e08401919084018584805b600581101561048157878603603f1901845282518051808852835b81811015610451578281018801518982018901528701610436565b81811115610461578488838b0101525b50601f01601f19169690960185019550928401929184019160010161041b565b50939897505050505050505056fea2646970667358221220e4109531dbabeb33ccbfa77f28019b7953ba57d32bea8b64099ee0dd97784c0464736f6c634300080e0033"

// DeployOwner deploys a new Ethereum contract, binding an instance of Owner to it.
func DeployOwner(auth *bind.TransactOpts, backend bind.ContractBackend, _a common.Address) (common.Address, *types.Transaction, *Owner, error) {
	parsed, err := abi.JSON(strings.NewReader(OwnerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OwnerBin), backend, _a)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Owner{OwnerCaller: OwnerCaller{contract: contract}, OwnerTransactor: OwnerTransactor{contract: contract}, OwnerFilterer: OwnerFilterer{contract: contract}}, nil
}

// Owner is an auto generated Go binding around an Ethereum contract.
type Owner struct {
	OwnerCaller     // Read-only binding to the contract
	OwnerTransactor // Write-only binding to the contract
	OwnerFilterer   // Log filterer for contract events
}

// OwnerCaller is an auto generated read-only Go binding around an Ethereum contract.
type OwnerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OwnerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OwnerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OwnerSession struct {
	Contract     *Owner            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OwnerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OwnerCallerSession struct {
	Contract *OwnerCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// OwnerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OwnerTransactorSession struct {
	Contract     *OwnerTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OwnerRaw is an auto generated low-level Go binding around an Ethereum contract.
type OwnerRaw struct {
	Contract *Owner // Generic contract binding to access the raw methods on
}

// OwnerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OwnerCallerRaw struct {
	Contract *OwnerCaller // Generic read-only contract binding to access the raw methods on
}

// OwnerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OwnerTransactorRaw struct {
	Contract *OwnerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOwner creates a new instance of Owner, bound to a specific deployed contract.
func NewOwner(address common.Address, backend bind.ContractBackend) (*Owner, error) {
	contract, err := bindOwner(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Owner{OwnerCaller: OwnerCaller{contract: contract}, OwnerTransactor: OwnerTransactor{contract: contract}, OwnerFilterer: OwnerFilterer{contract: contract}}, nil
}

// NewOwnerCaller creates a new read-only instance of Owner, bound to a specific deployed contract.
func NewOwnerCaller(address common.Address, caller bind.ContractCaller) (*OwnerCaller, error) {
	contract, err := bindOwner(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OwnerCaller{contract: contract}, nil
}

// NewOwnerTransactor creates a new write-only instance of Owner, bound to a specific deployed contract.
func NewOwnerTransactor(address common.Address, transactor bind.ContractTransactor) (*OwnerTransactor, error) {
	contract, err := bindOwner(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OwnerTransactor{contract: contract}, nil
}

// NewOwnerFilterer creates a new log filterer instance of Owner, bound to a specific deployed contract.
func NewOwnerFilterer(address common.Address, filterer bind.ContractFilterer) (*OwnerFilterer, error) {
	contract, err := bindOwner(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OwnerFilterer{contract: contract}, nil
}

// bindOwner binds a generic wrapper to an already deployed contract.
func bindOwner(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OwnerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Owner *OwnerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Owner.Contract.OwnerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Owner *OwnerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Owner.Contract.OwnerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Owner *OwnerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Owner.Contract.OwnerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Owner *OwnerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Owner.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Owner *OwnerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Owner.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Owner *OwnerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Owner.Contract.contract.Transact(opts, method, params...)
}

// Auth is a free data retrieval call binding the contract method 0xde9375f2.
//
// Solidity: function auth() view returns(address)
func (_Owner *OwnerCaller) Auth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Owner.contract.Call(opts, &out, "auth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Auth is a free data retrieval call binding the contract method 0xde9375f2.
//
// Solidity: function auth() view returns(address)
func (_Owner *OwnerSession) Auth() (common.Address, error) {
	return _Owner.Contract.Auth(&_Owner.CallOpts)
}

// Auth is a free data retrieval call binding the contract method 0xde9375f2.
//
// Solidity: function auth() view returns(address)
func (_Owner *OwnerCallerSession) Auth() (common.Address, error) {
	return _Owner.Contract.Auth(&_Owner.CallOpts)
}

// Owners is a free data retrieval call binding the contract method 0x022914a7.
//
// Solidity: function owners(address ) view returns(bool)
func (_Owner *OwnerCaller) Owners(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _Owner.contract.Call(opts, &out, "owners", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Owners is a free data retrieval call binding the contract method 0x022914a7.
//
// Solidity: function owners(address ) view returns(bool)
func (_Owner *OwnerSession) Owners(arg0 common.Address) (bool, error) {
	return _Owner.Contract.Owners(&_Owner.CallOpts, arg0)
}

// Owners is a free data retrieval call binding the contract method 0x022914a7.
//
// Solidity: function owners(address ) view returns(bool)
func (_Owner *OwnerCallerSession) Owners(arg0 common.Address) (bool, error) {
	return _Owner.Contract.Owners(&_Owner.CallOpts, arg0)
}

// Add is a paid mutator transaction binding the contract method 0x4bf1b134.
//
// Solidity: function add(address _a, bool isSet, bytes[5] signs) returns()
func (_Owner *OwnerTransactor) Add(opts *bind.TransactOpts, _a common.Address, isSet bool, signs [5][]byte) (*types.Transaction, error) {
	return _Owner.contract.Transact(opts, "add", _a, isSet, signs)
}

// Add is a paid mutator transaction binding the contract method 0x4bf1b134.
//
// Solidity: function add(address _a, bool isSet, bytes[5] signs) returns()
func (_Owner *OwnerSession) Add(_a common.Address, isSet bool, signs [5][]byte) (*types.Transaction, error) {
	return _Owner.Contract.Add(&_Owner.TransactOpts, _a, isSet, signs)
}

// Add is a paid mutator transaction binding the contract method 0x4bf1b134.
//
// Solidity: function add(address _a, bool isSet, bytes[5] signs) returns()
func (_Owner *OwnerTransactorSession) Add(_a common.Address, isSet bool, signs [5][]byte) (*types.Transaction, error) {
	return _Owner.Contract.Add(&_Owner.TransactOpts, _a, isSet, signs)
}

// OwnerAddOwnerIterator is returned from FilterAddOwner and is used to iterate over the raw logs and unpacked data for AddOwner events raised by the Owner contract.
type OwnerAddOwnerIterator struct {
	Event *OwnerAddOwner // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OwnerAddOwnerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OwnerAddOwner)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OwnerAddOwner)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OwnerAddOwnerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OwnerAddOwnerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OwnerAddOwner represents a AddOwner event raised by the Owner contract.
type OwnerAddOwner struct {
	From  common.Address
	IsSet bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAddOwner is a free log retrieval operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_Owner *OwnerFilterer) FilterAddOwner(opts *bind.FilterOpts) (*OwnerAddOwnerIterator, error) {

	logs, sub, err := _Owner.contract.FilterLogs(opts, "AddOwner")
	if err != nil {
		return nil, err
	}
	return &OwnerAddOwnerIterator{contract: _Owner.contract, event: "AddOwner", logs: logs, sub: sub}, nil
}

// WatchAddOwner is a free log subscription operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_Owner *OwnerFilterer) WatchAddOwner(opts *bind.WatchOpts, sink chan<- *OwnerAddOwner) (event.Subscription, error) {

	logs, sub, err := _Owner.contract.WatchLogs(opts, "AddOwner")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OwnerAddOwner)
				if err := _Owner.contract.UnpackLog(event, "AddOwner", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddOwner is a log parse operation binding the contract event 0x938b2a24c98e4e542127ffa74a91e48942c2bddccae3b6d75f82bfda7bbc0807.
//
// Solidity: event AddOwner(address from, bool isSet)
func (_Owner *OwnerFilterer) ParseAddOwner(log types.Log) (*OwnerAddOwner, error) {
	event := new(OwnerAddOwner)
	if err := _Owner.contract.UnpackLog(event, "AddOwner", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
